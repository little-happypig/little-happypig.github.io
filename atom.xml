<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安肆的小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://little-happypig.github.io/"/>
  <updated>2020-04-25T13:01:57.000Z</updated>
  <id>https://little-happypig.github.io/</id>
  
  <author>
    <name>安肆</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020-04-25-更改Hexo Next主题的fontawesome版本至最新</title>
    <link href="https://little-happypig.github.io/2020/04/25/2020-04-25-%E6%9B%B4%E6%94%B9hexo%20next%E4%B8%BB%E9%A2%98%E7%9A%84fontawesome%E7%89%88%E6%9C%AC%E8%87%B3%E6%9C%80%E6%96%B0/"/>
    <id>https://little-happypig.github.io/2020/04/25/2020-04-25-%E6%9B%B4%E6%94%B9hexo%20next%E4%B8%BB%E9%A2%98%E7%9A%84fontawesome%E7%89%88%E6%9C%AC%E8%87%B3%E6%9C%80%E6%96%B0/</id>
    <published>2020-04-25T13:01:57.000Z</published>
    <updated>2020-04-25T13:01:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于在后续又发现在其他地方也用到了icon，所以需要大量更改配置。<strong>如果不会写进程的还是别改了。</strong></p><p>next的fontawesome默认版本是4.6.2，在写本文时，fontawesome的最新版本是5.8.1。貌似fontawesome在5.0.0版本之后改版了。总之一直出现方框乱码。<br>后来发现，现在的fontawesome链接已经跟以前不一样了，它现在分为3大类别。</p><a id="more"></a><p>现在的使用方法是：在next主题的_config.xml中搜索fontawesome，并更改属性<code>fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.1/css/all.min.css</code>，注意里面的文档是all.min.css，而不是font-awesom.min.css。<br>但是这样更改之后还是会出现方框乱码，原因是next默认使用的fa的类，而有时候我们需要使用fab或其他的类。所以需要修改一下源代码。<br>找到layout/_macro/menu/menu-item.swig，定位class=”menu-item-icon，将后面的“fa fa-fw fa-”删去。以后再修改icon不能只加一个名字了。可以像我这样修改：<code>assorted: /assorted || fa fa-fw fa-layer-group</code>。<br>可以看到我将icon的名称补全了。如果想用fab的类，可以像这样修改：<code>python: /python || fab fa-fw fa-python</code>。以此类推。</p><p>这样修改以后，如果不想用fontawesome了，想用其他的icon库，改起来也很方便。</p><p>layout/_macro/menu/menu-item.swig被layout/_partials/header/sub-menu.swig引用。<br>另外由于fontawesome版本改动，社交软件的icon也需要更改，在_config.xml中搜索github，将icon改为<code>fab fa-fw fa-github</code>。找到ayout/_macro/siderbar.swig，搜索fa fa-fw fa-，看看定位的地点上面是不是<code>{百分号 if theme.social_icons.enable 百分号}</code>。是的话将fa fa-fw fa-删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于在后续又发现在其他地方也用到了icon，所以需要大量更改配置。&lt;strong&gt;如果不会写进程的还是别改了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;next的fontawesome默认版本是4.6.2，在写本文时，fontawesome的最新版本是5.8.1。貌似fontawesome在5.0.0版本之后改版了。总之一直出现方框乱码。&lt;br&gt;后来发现，现在的fontawesome链接已经跟以前不一样了，它现在分为3大类别。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://little-happypig.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://little-happypig.github.io/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://little-happypig.github.io/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
      <category term="fontawesome" scheme="https://little-happypig.github.io/tags/fontawesome/"/>
    
  </entry>
  
  <entry>
    <title>2020-04-25-Hexo-设置阅读全文</title>
    <link href="https://little-happypig.github.io/2020/04/25/2020-04-25-Hexo%E4%B8%AD%E8%AE%BE%E7%BD%AE%E2%80%9C%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87%E2%80%9C/"/>
    <id>https://little-happypig.github.io/2020/04/25/2020-04-25-Hexo%E4%B8%AD%E8%AE%BE%E7%BD%AE%E2%80%9C%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87%E2%80%9C/</id>
    <published>2020-04-25T07:01:57.000Z</published>
    <updated>2020-04-25T07:01:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近使用<a href="https://link.jianshu.com/?t=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2F" target="_blank" rel="noopener">Hexo</a>搭建了自己的博客，并且使用了简洁但是强大的<a href="https://link.jianshu.com/?t=http%3A%2F%2Ftheme-next.iissnan.com%2Fgetting-started.html" target="_blank" rel="noopener">NexT</a>主题。这里介绍一下NexT主题下设置在首页显示一篇文章的简介，在简介后面提供一个链接<strong>阅读全文</strong>来进入文章的详情页。效果请看 <a href="https://little-happypig.github.io/">我的小窝</a></p><ol><li>在文章中使用<code>&lt; !--more--&gt;</code> 手动进行截断<br>这种方法可以根据文章的内容，自己在合适的位置添加 <code>&lt; !--more--&gt;</code> 标签，使用灵活，也是Hexo推荐的方法。</li></ol><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/2352140-ec93f0ac69d07b21.PNG" alt="img"></p><ol start="2"><li><p>在文章中的<code>front-matter</code>中添加description，并提供文章摘录<br>这种方式只会在首页列表中显示文章的摘要内容，进入文章详情后不会再显示。</p><p><img src="https://upload-images.jianshu.io/upload_images/2352140-67c6e1edb5695035.PNG" alt="img"></p></li><li><p>自动形成摘要，在<strong>主题配置文件</strong>中添加<br>默认截取的长度为 150 字符，可以根据需要自行设定</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>特别注意的是在Next的高版本上<br>next 7.6版文档本关于设置阅读全文，首先要下载插件 然后在主题配置文件_config.yml配置下就好了。</p><p>一，在博客目录下执行</p><p>npm install hexo-excerpt –save</p><p>二，在站点配置文件_config.yml添加</p><p>excerpt:<br>depth: 10<br>excerpt_excludes: []<br>more_excludes: []<br>hideWholePostExcerpts: true</p><p>next7.6最新文档添加链接描述</p><p>以上方法不行的话 在博客配置文件 _config.yml里 excerpt_description 改为true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近使用&lt;a href=&quot;https://link.jianshu.com/?t=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;搭建了自己的博客，并且使用了简洁但是强大的&lt;a href=&quot;https://link.jianshu.com/?t=http%3A%2F%2Ftheme-next.iissnan.com%2Fgetting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NexT&lt;/a&gt;主题。这里介绍一下NexT主题下设置在首页显示一篇文章的简介，在简介后面提供一个链接&lt;strong&gt;阅读全文&lt;/strong&gt;来进入文章的详情页。效果请看 &lt;a href=&quot;https://little-happypig.github.io/&quot;&gt;我的小窝&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在文章中使用&lt;code&gt;&amp;lt; !--more--&amp;gt;&lt;/code&gt; 手动进行截断&lt;br&gt;这种方法可以根据文章的内容，自己在合适的位置添加 &lt;code&gt;&amp;lt; !--more--&amp;gt;&lt;/code&gt; 标签，使用灵活，也是Hexo推荐的方法。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://little-happypig.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://little-happypig.github.io/tags/Hexo/"/>
    
      <category term="设置" scheme="https://little-happypig.github.io/tags/%E8%AE%BE%E7%BD%AE/"/>
    
      <category term="阅读全文" scheme="https://little-happypig.github.io/tags/%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://little-happypig.github.io/2020/04/25/hello-world/"/>
    <id>https://little-happypig.github.io/2020/04/25/hello-world/</id>
    <published>2020-04-25T03:27:29.847Z</published>
    <updated>2020-04-25T03:27:29.847Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>免费个人博客搭建详解（转载）</title>
    <link href="https://little-happypig.github.io/2020/04/24/2020-04-24-%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AF%A6%E8%A7%A3/"/>
    <id>https://little-happypig.github.io/2020/04/24/2020-04-24-%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-04-24T13:01:57.000Z</published>
    <updated>2020-04-24T13:01:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/1233754-6f9a794ed9725f8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>免费个人博客搭建思维导图</p><h3 id="作者：李旺成"><a href="#作者：李旺成" class="headerlink" title="作者：李旺成"></a>作者：<a href="https://link.jianshu.com/?t=https://github.com/DIY-green/" target="_blank" rel="noopener">李旺成</a></h3><h3 id="时间：2016年4月27日"><a href="#时间：2016年4月27日" class="headerlink" title="时间：2016年4月27日"></a>时间：2016年4月27日</h3><hr><p><img src="https://upload-images.jianshu.io/upload_images/1233754-07f2a3d6f243ab36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/971/format/webp" alt="img"></p><a id="more"></a><p>个人博客效果图</p><h1 id="一、技术选型"><a href="#一、技术选型" class="headerlink" title="一、技术选型"></a>一、技术选型</h1><h2 id="常见个人博客搭建方案"><a href="#常见个人博客搭建方案" class="headerlink" title="常见个人博客搭建方案"></a>常见个人博客搭建方案</h2><p>搭建个人博客通常有如下选择：</p><p><strong><a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/23618.htm" target="_blank" rel="noopener">WorkPress：</a></strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-689eb0157c10fffe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/492/format/webp" alt="img"></p><p>WorkPress</p><p><strong><a href="https://link.jianshu.com/?t=https://pages.github.com/" target="_blank" rel="noopener">GitHubPages</a> + <a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/7878719.htm" target="_blank" rel="noopener">Jekyll</a>：</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-eac1693df0953203.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/644/format/webp" alt="img"></p><p>GitHubPages+Jekyll</p><p><strong><a href="https://link.jianshu.com/?t=https://pages.github.com/" target="_blank" rel="noopener">GitHubPages</a> + <a href="https://link.jianshu.com/?t=https://hexo.io/" target="_blank" rel="noopener">Hexo</a>：</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-329b44567f812da2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/539/format/webp" alt="img"></p><p>GitHubPages+Hexo</p><h2 id="选择-GitHubPages-Hexo"><a href="#选择-GitHubPages-Hexo" class="headerlink" title="选择 GitHubPages + Hexo"></a>选择 GitHubPages + Hexo</h2><p>上面提到的三种个人博客搭建方案，在对这三个方案做了简单的了解之后，我选择了 <a href="https://link.jianshu.com/?t=https://pages.github.com/" target="_blank" rel="noopener">GitHubPages</a> + <a href="https://link.jianshu.com/?t=https://hexo.io/" target="_blank" rel="noopener">Hexo</a>。主要是出于以下几点考虑：</p><ul><li>WorkPress：一般需要独立域名（收费），对 MarkDown 不友好</li><li>GitHubPages + Jekell：免费，稍微有点麻烦</li><li>GitHubPages + Hexo：免费，使用简单，使用者众多…</li></ul><h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>Hexo 是一个基于 <a href="https://link.jianshu.com/?t=http://nodejs.cn/" target="_blank" rel="noopener">Nodejs</a> 的静态博客网站生成器，作者是来自台湾的 Tommy Chen(<a href="https://link.jianshu.com/?t=https://zespia.tw/" target="_blank" rel="noopener">https://zespia.tw/</a>)</p><p><strong>特点：</strong></p><ul><li>不可思议的快速 ─ 只要一眨眼静态文件即生成完成</li><li>支持 Markdown</li><li>仅需一道指令即可部署到 GitHub Pages 和 Heroku</li><li>已移植 Octopress 插件</li><li>高扩展性、自订性</li><li>兼容于 Windows, Mac &amp; Linux</li></ul><h1 id="二、博客搭建"><a href="#二、博客搭建" class="headerlink" title="二、博客搭建"></a>二、博客搭建</h1><p>跟着我做，简简单单5-7分钟你即可拥有自己的个人博客。开始吧！</p><h2 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 GitHub 仓库</h2><h3 id="注册-登录"><a href="#注册-登录" class="headerlink" title="注册/登录"></a>注册/登录</h3><p>如果没有帐号，前往 <a href="https://link.jianshu.com/?t=https://github.com/join?source=header-home" target="_blank" rel="noopener">GitHub</a> 页面完成<strong>注册</strong>：</p><ol><li>用户名</li><li>邮箱地址</li><li>密码</li><li>Create an account</li></ol><p><strong>登录</strong><br>如果有账号，前往 <a href="https://link.jianshu.com/?t=https://github.com/login" target="_blank" rel="noopener">GitHub</a> 页面登录：</p><ol><li>用户名或邮箱地址</li><li>密码</li><li>Sign in</li></ol><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>直接看图操作：</p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-01447f159dc3cee2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/356/format/webp" alt="img"></p><p>创建仓库：步骤一</p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-a04beb849e0f7a43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/725/format/webp" alt="img"></p><p>创建仓库：步骤二</p><p>”<strong>步骤二</strong>“中，注意 Respository name 中一定要输入：你的用户名.github.io。其他地方不用修改，然后直接点 ”Create repository“ 按钮完成创建即可。</p><h2 id="本地环境准备"><a href="#本地环境准备" class="headerlink" title="本地环境准备"></a>本地环境准备</h2><h3 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h3><h4 id="Windows-中"><a href="#Windows-中" class="headerlink" title="Windows 中"></a>Windows 中</h4><p><strong>1、下载 Git</strong><br>打开 <a href="https://link.jianshu.com/?t=https://git-scm.com/download/" target="_blank" rel="noopener">Git</a> 官网，选择 Downloads 下面的 Windows（按照你的系统选择 32 位或者 64 位）。考虑到可能受网络环境影响，我已经把 Git 上传到网盘分享出来了，<a href="https://link.jianshu.com/?t=http://pan.baidu.com/s/1hrMjxHE" target="_blank" rel="noopener">点这里去网盘</a>。</p><p><strong>2、安装 Git</strong><br>双击安装文件 -&gt; 下一步 -&gt; 下一步…<br>没有特殊要求的直接下一步即可，不用去修改默认选项。</p><h4 id="Mac-OS-中"><a href="#Mac-OS-中" class="headerlink" title="Mac OS 中"></a>Mac OS 中</h4><p>话说 Mac 上的 XCode 自带了 Git。（汗！没装 XCode 怎么破）<br><strong>1、下载 Git</strong><br>打开 <a href="https://link.jianshu.com/?t=https://git-scm.com/download/" target="_blank" rel="noopener">Git</a> 官网，选择 Downloads 下面的 Mac OS X。Mac版的 Git 也上传到网盘分享出来了，<a href="https://link.jianshu.com/?t=http://pan.baidu.com/s/1hrMjxHE" target="_blank" rel="noopener">点这里去网盘</a>。<br><strong>2、安装 Git</strong><br>直接双击 dmg 文件安装即可。</p><h3 id="Nodejs安装"><a href="#Nodejs安装" class="headerlink" title="Nodejs安装"></a>Nodejs安装</h3><h4 id="Windows-中-1"><a href="#Windows-中-1" class="headerlink" title="Windows 中"></a>Windows 中</h4><p><strong>1、下载 Nodejs</strong><br>打开 <a href="https://link.jianshu.com/?t=https://nodejs.org/en/download/" target="_blank" rel="noopener">Nodejs</a> 下载页面，选择合适你当前系统版本的安装包。这里建议使用 LTS 版本的，当前的是 v4.4.3。我已经把 Windows 32/64 位的安装包都提交到网盘了，你可以直接从网盘下载，<a href="https://link.jianshu.com/?t=http://pan.baidu.com/s/1hrMjxHE" target="_blank" rel="noopener">点这里去网盘</a>。</p><p><strong>2、安装 Nodejs</strong><br>双击安装文件 -&gt; 下一步 -&gt; 下一步…</p><h4 id="Mac-OS-中-1"><a href="#Mac-OS-中-1" class="headerlink" title="Mac OS 中"></a>Mac OS 中</h4><p><strong>1、下载 Nodejs</strong><br>打开 <a href="https://link.jianshu.com/?t=https://nodejs.org/en/download/" target="_blank" rel="noopener">Nodejs</a> 下载页面，选择 Macintosh Installer 即可开始下载。网盘里面也上传了，<a href="https://link.jianshu.com/?t=http://pan.baidu.com/s/1hrMjxHE" target="_blank" rel="noopener">点这里去网盘</a>。</p><p><strong>2、安装 Nodejs</strong><br>直接双击 pkg 文件安装即可。</p><p><strong>说明：</strong> Nodejs 也可以使用 nvm（Nodejs版本管理器）来安装，步骤如下：<br>*<em>1、安装 nvm *</em></p><ol><li>通过 brew 安装<br>$ brew install nvm<br>$ mkdir <del>/.nvm<br>$ export NVM_DIR=</del>/.nvm<br>$ . $(brew –prefix nvm)/nvm.sh<br>$ source ~/.nvm/nvm.sh // 使配置生效</li><li>使用 curl 安装<br>$ curl <a href="https://link.jianshu.com/?t=https://raw.github.com/creationix/nvm/master/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/master/install.sh</a> | sh<br>$ source ~/.nvm/nvm.sh // 使配置生效</li></ol><p><strong>2、安装 Nodejs 4</strong><br>$ nvm install 4</p><h3 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h3><p>Hexo 是今天的主角，先打开 <a href="https://link.jianshu.com/?t=https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 官网。</p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-617d7652403ae281.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1196/format/webp" alt="img"></p><p>Hexo官网</p><p>对，如上图所示，就一条命令，很简单有没有。</p><h3 id="Windows-中-2"><a href="#Windows-中-2" class="headerlink" title="Windows 中"></a>Windows 中</h3><p><strong>1、打开命令行</strong><br>win+R，输入 cmd，回车</p><p><strong>2、输入命令</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h4 id="Mac-OS-中-2"><a href="#Mac-OS-中-2" class="headerlink" title="Mac OS 中"></a>Mac OS 中</h4><p><strong>1、打开终端</strong><br>不要问我终端在哪里…</p><p><strong>2、输入命令</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="创建本地博客"><a href="#创建本地博客" class="headerlink" title="创建本地博客"></a>创建本地博客</h3><h3 id="Windows-中-3"><a href="#Windows-中-3" class="headerlink" title="Windows 中"></a>Windows 中</h3><p><strong>1、打开命令行，定位到你希望放置博客的位置</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-8b98ed5e4aaa22eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/229/format/webp" alt="img"></p><p>定位到目标目录</p><p><strong>2、输入命令</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 你的用户名.github.io  <span class="comment">// 建议和创建仓库时使用同一个</span></span><br></pre></td></tr></table></figure><h4 id="Mac-OS-中-3"><a href="#Mac-OS-中-3" class="headerlink" title="Mac OS 中"></a>Mac OS 中</h4><p><strong>1、打开终端，定位到你希望放置博客的位置</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-0cf9d6f37257fac0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/894/format/webp" alt="img"></p><p>Mac上定位到指定目录</p><p><strong>2、输入命令</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init 你的用户名.github.io  <span class="comment">// 建议和创建仓库时使用同一个</span></span><br></pre></td></tr></table></figure><h3 id="Next-安装"><a href="#Next-安装" class="headerlink" title="Next 安装"></a>Next 安装</h3><p>经过上面步骤创建完本地博客之后，基本的博客系统就已经搭建好了，自带了 landscape 主题。不过该主题不是很符合我的审美，在网上搜索了一下 Hexo 主题，选择了用户量较大的 Next。</p><p><a href="https://link.jianshu.com/?t=https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">Next</a> 是 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">iissnan</a> 在 GitHub 上开源的一个 Hexo 主题，主打简洁。选择该主题有如下原因：</p><ul><li>简洁，美观</li><li>功能齐全</li><li>使用者众多</li><li>文档齐全</li></ul><blockquote><p>”说明：“在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml<br>。 其中，一份位于站点根目录下（即 xxx.github.io 目录下），主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置有主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 “<strong>站点配置文件</strong>”， 后者称为 “<strong>主题配置文件</strong>”。</p></blockquote><p>看下怎么安装主题：</p><p><strong>1、切换到上面生成的本地博客目录（xxx.github.io）</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-0a8e742bc305ef5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/449/format/webp" alt="img"></p><p>切换到本地博客目录</p><p>Mac OS 的终端上类似，把 dir 替换为 ls 即可。</p><p><strong>2、安装 Next 主题</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/theme-next/hexo-theme-next themes/next</span></span><br><span class="line">或在 Mac 上</span><br><span class="line">$ git clone https:<span class="comment">//github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure><p><strong>3、使用 Next 主题</strong><br><strong>首先，</strong>复制一份打开本地博客目录下的 <strong>_config.yml</strong> 文件，命名为 <strong>_config_bak.yml</strong>，做为备份，以防改错<br><strong>然后，</strong>使用文本编辑器打开本地博客目录下的 <strong>_config.yml</strong> 文件，搜索，定位 theme 键值，将 theme 的值修改为 next</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next <span class="comment">//刚刚安装的主题名称</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong>该配置文件中的键值之间一定要有<strong>空格</strong>，否则轻则没有作用，重则报错，无法启动。</p></blockquote><p><strong>4、站点配置文件基本项修改</strong><br>关于 Hexo 配置的详细信息请前往 <a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">Hexo的官方文档</a>。</p><p>这里先看看最基础的配置，也就是必须要改动的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title: xxx  # 博客的名字，也称站点名称</span><br><span class="line"></span><br><span class="line">author: xxx # 作者名字</span><br><span class="line"></span><br><span class="line">description: xxx # 对站点的描述，搜索引擎会抓取，可以自定义（这个还是加上比较好）</span><br><span class="line"></span><br><span class="line">language: zh-Hans # 语言 简体中文</span><br><span class="line"></span><br><span class="line">theme: next  # 配置主题</span><br><span class="line"></span><br><span class="line">deploy: # 部署相关配置</span><br><span class="line">    type: git # 使用 Git 提交</span><br><span class="line">    repo: https:<span class="comment">//github.com/xxx/xxx.github.io.git # 就是存放博客的仓库地址</span></span><br></pre></td></tr></table></figure><p>上述配置是必须要修改的，再次强调，键值之间一定要 ”<strong>加空格</strong>“，请在文本编辑器中搜索定位后再修改。</p><p><strong>站点配置文件详细配置示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site 这里的配置，哪项配置反映在哪里，可以参考我的博客</span><br><span class="line">title: xxx # 博客的名字，也称站点名称</span><br><span class="line">subtitle: xxx # 副标题</span><br><span class="line">description: xxx # 对站点的描述，搜索引擎会抓取，可以自定义</span><br><span class="line">author: xxx # 作者名字</span><br><span class="line">language: zh-Hans # 语言 简体中文</span><br><span class="line">timezone:  # 用默认的即可</span><br><span class="line"></span><br><span class="line"># URL </span><br><span class="line"># 这项暂时不需要配置，绑定域名后，要创建 sitemap.xml 时再配置该项</span><br><span class="line">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span><br><span class="line">url: # http://xxx.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line"># 目录，不要修改</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: <span class="keyword">public</span></span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing </span><br><span class="line"># 文章布局、写作格式的定义，不修改</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: <span class="number">0</span></span><br><span class="line">render_drafts: <span class="keyword">false</span></span><br><span class="line">post_asset_folder: <span class="keyword">false</span></span><br><span class="line">relative_link: <span class="keyword">false</span></span><br><span class="line">future: <span class="keyword">true</span></span><br><span class="line">highlight:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  line_number: <span class="keyword">true</span></span><br><span class="line">  auto_detect: <span class="keyword">false</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format </span><br><span class="line"># 日期 / 时间 格式，不要修改</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: MMM D YYYY</span><br><span class="line">time_format: H:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination </span><br><span class="line"># 每页显示文章数，可以自定义</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: <span class="number">10</span></span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions </span><br><span class="line"># 配置站点所用主题和插件，这里将默认主题注释，修改为 next</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br><span class="line">#theme: landscape</span><br><span class="line"></span><br><span class="line"># 头像</span><br><span class="line"># 注意：是 xxx.github.io/source 下的开始的相对路径，如果 source 文件夹下面没有 uploads 文件夹，那么新建一个。考虑到会博客中用很多图片，在 uploads 文件夹下请分好类，避免混乱</span><br><span class="line">avatar: /uploads/images/avatar.jpg</span><br><span class="line"></span><br><span class="line"># Deployment </span><br><span class="line"># 本地博客部署到 github 上要配置这里</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git # 使用 Git 提交</span><br><span class="line">  repository: https:<span class="comment">//github.com/xxx/xxx.github.io.git # 就是存放博客的仓库地址</span></span><br></pre></td></tr></table></figure><blockquote><p>PS：是不是有点迫不及待想看看效果了，那好，先在本地跑起来试试，步骤如下：</p></blockquote><ol><li>打开命令行，定位到 xxx.github.io 目录</li><li>输入命令：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s # == hexo server #启动服务预览</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><ol><li><p>启动成功可以看到提示，按照提示用浏览器打开提示网址，即可看到你的本地博客了，里面有一篇 Hello World</p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-329227f85880d3bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/570/format/webp" alt="img"></p><p>hexo s 命令成功提示</p></li></ol><p>看完效果之后继续学习下面的内容…</p><h1 id="三、Next-配置"><a href="#三、Next-配置" class="headerlink" title="三、Next 配置"></a>三、Next 配置</h1><p>当然，最权威的是看<a href="https://link.jianshu.com/?t=http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">官方的说明文档</a>，我在这里提供一个示例，供大家参考，你可以直接拷过去稍微改动一点就行。</p><h2 id="Next-配置详解"><a href="#Next-配置详解" class="headerlink" title="Next 配置详解"></a>Next 配置详解</h2><p>Next 配置就是上面所说的”<strong>主题配置文件</strong>“，位于 xxx.github.io/themes/next 目录下，文件名为 <strong>_config.yml</strong>。老规矩，先备份一份 ”<strong>_config_bak.yml</strong>“，以防改错。</p><p>以<a href="https://link.jianshu.com/?t=http://diy-green.github.io" target="_blank" rel="noopener">我的博客</a>为例，阐述一下需要配置的地方：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"># Set default keywords (Use a comma to separate)</span><br><span class="line"># 设置关键字</span><br><span class="line">keywords: <span class="string">"Android, DIY"</span></span><br><span class="line"></span><br><span class="line"># Specify the date when the site was setup</span><br><span class="line"># 设置博客开始时间</span><br><span class="line">since: <span class="number">2016</span></span><br><span class="line"></span><br><span class="line"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span><br><span class="line"># 设置菜单，就是[我的博客](http://diy-green.github.io)左侧那一列</span><br><span class="line">menu:</span><br><span class="line">  home: / # 在菜单上显示首页</span><br><span class="line">  archives: /archives # 在菜单删显示全部</span><br><span class="line">  categories: /categories # 在菜单上显示 分类</span><br><span class="line">  tags: /tags # 在菜单上显示 标签</span><br><span class="line">  about: /about # 在菜单上显示 关于</span><br><span class="line">  #commonweal: /404.html</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line"># 设置风格</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces # 我的就是这个双栏风格</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommand.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true # 设置是否显示阅读全文，文章较多的话，有必要设置为 true</span><br><span class="line">  length: <span class="number">150</span></span><br><span class="line"></span><br><span class="line"># 一些第三方服务设置，这里只提一下”多说“，其他的请参考官方介绍</span><br><span class="line"># Make duoshuo show UA</span><br><span class="line"># user_id must NOT be null when admin_enable is true!</span><br><span class="line"># you can visit http://dev.duoshuo.com get duoshuo user id.</span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: <span class="keyword">true</span></span><br><span class="line">  admin_enable: <span class="keyword">true</span></span><br><span class="line">  user_id: 0 # **这里不要动，千万别动**</span><br><span class="line">  admin_nickname: DIY-green</span><br><span class="line"></span><br><span class="line"># Code Highlight theme</span><br><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">#highlight_theme: normal</span><br><span class="line"># 代码高亮主题</span><br><span class="line">highlight_theme: night eighties</span><br><span class="line"></span><br><span class="line"># 打赏配置</span><br><span class="line"># 打赏说明文本</span><br><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line"># 微信收款二维码</span><br><span class="line">wechatpay: /uploads/images/wechat-reward-image.png</span><br><span class="line"># 支付宝收款二维码</span><br><span class="line">alipay: /uploads/images/alipay-reward-image.png</span><br><span class="line"></span><br><span class="line"># 友情链接</span><br><span class="line">links_title: Links</span><br><span class="line">links:</span><br><span class="line">  DIY-green简书: http:<span class="comment">//www.jianshu.com/users/0ad0a0afc409/latest_articles</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 订阅微信公众号</span><br><span class="line"># Wechat Subscriber</span><br><span class="line">#wechat_subscriber:</span><br><span class="line">#  enabled: true</span><br><span class="line">#  qcode: /uploads/wechat-qcode.jpg</span><br><span class="line">#  description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！</span><br></pre></td></tr></table></figure><h2 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h2><p>先看下添加了分类的效果：</p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-663fcd66e666c105.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/683/format/webp" alt="img"></p><p>分类页面效果</p><p><strong>操作步骤</strong></p><ol><li>打开命令行，定位到 xxx.github.io 目录</li><li>新建一个页面，命名为 categories</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page categories</span><br><span class="line">或</span><br><span class="line">$ hexo <span class="keyword">new</span> page categories</span><br></pre></td></tr></table></figure><ol><li>根据提示找到新建的 index.md 文件，编辑</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 这里有 "---"（这会破坏代码展示效果，所以注释了）</span><br><span class="line">title: All tags </span><br><span class="line">date: <span class="number">2016</span>-<span class="number">04</span>-<span class="number">25</span> <span class="number">11</span>:<span class="number">45</span>:<span class="number">45</span></span><br><span class="line">type: "categories" # 将页面的类型设置为 categories</span><br><span class="line"> ，主题将自动为这个页面显示所有分类</span><br><span class="line">comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false</span><br><span class="line"># 这里也有 "---"</span><br></pre></td></tr></table></figure><h2 id="创建标签云页面"><a href="#创建标签云页面" class="headerlink" title="创建标签云页面"></a>创建标签云页面</h2><p>先看下添加了标签云的效果：</p><p><img src="https://upload-images.jianshu.io/upload_images/1233754-94c2cc2a1732e59e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/899/format/webp" alt="img"></p><p>标签云页面效果</p><p><strong>操作步骤</strong></p><ol><li>打开命令行，定位到 xxx.github.io 目录</li><li>新建一个页面，命名为 tags</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"tags"</span></span><br><span class="line">或</span><br><span class="line">$ hexo <span class="keyword">new</span> page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure><ol><li>根据提示找到新建的 index.md 文件，编辑</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 这里有 "---"</span><br><span class="line">title: All tags </span><br><span class="line">date: <span class="number">2016</span>-<span class="number">04</span>-<span class="number">27</span> <span class="number">08</span>:<span class="number">56</span>:<span class="number">40</span></span><br><span class="line">type: "tags" # 将页面的类型设置为 tags</span><br><span class="line"> ，主题将自动为这个页面显示标签云</span><br><span class="line">comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false</span><br><span class="line"># 这里也有 "---"</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>格式<br>再次强调，设置项的键值之间<strong>一定要有空格</strong></li><li>菜单上显示 ”分类“ 等栏目<br>如果需要在菜单上显示 ”分类“ 和 ”标签“ 等，那么记得打开注释，或者添加该条目</li><li>关于第三方服务的 ”duoshuo_info“<br>在配置该项的时候，user_id 键对应的值不要修改，也就是保持为 0，具体原因我不清楚，如果修改了该值，那么你的博客会变得一片空白</li><li>分类和标签云页面<br><strong>首先，</strong>要使用” hexo new page “命令生成这两个页面，否则报404。<strong>其次，</strong>这两个页面是主题自动维护的，只要我们的文章按照规矩来就行了，下面会详细说明</li></ol><h1 id="四、写博客与发布"><a href="#四、写博客与发布" class="headerlink" title="四、写博客与发布"></a>四、写博客与发布</h1><p>经过上述步骤，本地博客和主题设置已经完成，那么接下来就是写博客了。</p><p>你的博客文件需要存放到 xxx.github.io/source/_posts 文件夹中，在该文件夹下面你可以按照你的博客分类建立一系列的文件夹来管理博客原文件。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p><strong>1、用 Markdown 写文章</strong><br>不管你用什么编辑 Markdown 文件，最后生成的 md 文件放到 xxx.github.io/source/_posts 文件夹或其子文件夹中即可，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 个人博客搭建详解（Windows和Mac通用版） # 这是标题</span><br><span class="line">categories:  # 这里写的分类会自动汇集到 categories 页面上，分类可以多级</span><br><span class="line">- 实用技术 # 一级分类</span><br><span class="line">- 个人博客 # 二级分类 </span><br><span class="line">tags:   # 这里写的标签会自动汇集到 tags 页面上</span><br><span class="line">- 实用 # 可配置多个标签，注意格式</span><br><span class="line">- 个人博客</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&gt;Hexo 是一个基于nodejs 的静态博客网站生成器，作者是来自台湾的 Tommy Chen</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>分类和标签是自动维护的，关键是的文章要按照规定的格式写，如上格式，可以参考。</p><blockquote><p><strong>说明：</strong>Next 主题会自动生成目录，这也省了不少事。</p></blockquote><p><strong>2、在本地运行测试</strong><br>打开命令行定位到 xxx.github.io 目录，输入命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s # 这是简写 == hexo server # 启动服务预览</span><br><span class="line">或</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p><strong>3、在浏览器查看效果</strong><br>在浏览器中输入 <a href="https://link.jianshu.com/?t=http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 访问本地博客，看看效果吧</p><p><strong>4、安装自动部署发布工具</strong><br>这里用到了 <a href="https://link.jianshu.com/?t=https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>，使用如下命令安装：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">或</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>*<em>5、发布到 GitHubPages *</em><br>确认在本地上显示无误之后，就可以将 md 转为 静态网页文件，然后发布到 GitHubPages 上去了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g #生成静态网页</span><br><span class="line">hexo d #开始部署</span><br><span class="line"></span><br><span class="line">也可以一次性执行</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>如果是第一次部署，终端会提示要求输入用户名和密码。等命令执行完之后，过几分钟打开 <a href="https://link.jianshu.com/?t=http://xxx.github.io" target="_blank" rel="noopener">http://xxx.github.io</a> 即可看到你的个人博客了。以后要发布新文章，执行上述命令即可。</p><h2 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>Git 的 bug<br>有个老版本的 Git 有个 bug，上传的时候会提示非法域名这类的，要解决该问题，最简单的方法就是更新 Git，用最新版的 Git</li><li>关于页面空白<br>主题配置文件中的 ”<strong>duoshuo_info</strong>“ 下的 ”user_id“ 如果是非 ”0“，会导致该问题</li><li>特殊字符导致报错<br>如添加新博客的时候报错了，而且提示的是 js 中某些地方报错，那么很可能是 md 文件中存在<strong>特殊字符</strong>（不是正常显示的字符，不是说特殊符号，能正常显示的都不是这里说的<strong>特殊字符</strong>），把特殊字符删除即可</li><li>Hexo 命令的常见报错<br>可以参考这篇文章：<a href="https://www.jianshu.com/p/465830080ea9#" target="_blank" rel="noopener">HEXO+Github,搭建属于自己的博客</a></li><li>使用hexo，如果换了电脑怎么更新博客？<br>这个问题相信大家都关心，知乎上有<a href="https://link.jianshu.com/?t=http://www.zhihu.com/question/21193762" target="_blank" rel="noopener">比较详细的解答</a>。我说一下我的解决方法吧！<br><strong>方案一：</strong><br>在新电脑上配置好本地博客环境，然后，直接拷贝原电脑上的 xxx.github.io 文件夹到新电脑上即可。<br><strong>方案二：</strong><br>将 xxx.github.io 文件夹同步到网上(如：Dropbox 等)，其他任何电脑（配置好了本地博客环境）要用的时候，从网上同步下来即可。</li></ol><h1 id="五、更多资源"><a href="#五、更多资源" class="headerlink" title="五、更多资源"></a>五、更多资源</h1><h2 id="Markdown-编辑器"><a href="#Markdown-编辑器" class="headerlink" title="Markdown 编辑器"></a>Markdown 编辑器</h2><ul><li>Windows 上推荐：<br><a href="https://link.jianshu.com/?t=http://pad.haroopress.com/user.html" target="_blank" rel="noopener">Haroopad</a><br><a href="https://link.jianshu.com/?t=http://git.oschina.net/elerao/Smark" target="_blank" rel="noopener">Smark</a><br><a href="https://link.jianshu.com/?t=http://www.markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a></li><li>Mac OS 上推荐：<br><a href="https://link.jianshu.com/?t=[http://mouapp.com/](http://mouapp.com/)" target="_blank" rel="noopener">Mou</a></li><li>在线资源推荐：<br><a href="https://www.jianshu.com/" target="_blank" rel="noopener">简书</a><br><a href="https://link.jianshu.com/?t=https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">作业部落</a><br><a href="https://link.jianshu.com/?t=https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a></li></ul><h2 id="Markdown语法参考"><a href="#Markdown语法参考" class="headerlink" title="Markdown语法参考"></a>Markdown语法参考</h2><p><a href="https://link.jianshu.com/?t=https://www.baidu.com/link?url=X6ZBpOvF44R7UbHJd-4uf8Ui7MZYYggb1-0mk22vWh3rXTwCIYafGsbJ7JrNz7mm&wd=&eqid=cc17be7a0014ecc900000003572005da" target="_blank" rel="noopener">Markdown 语法说明(简体中文版)</a><br><a href="https://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">Markdown——入门指南</a><br><a href="https://link.jianshu.com/?t=http://www.jeyzhang.com/markdown-common-problems.html" target="_blank" rel="noopener">markdown写作中的常见问题</a></p><blockquote><p><strong>提示：</strong>更简单的学习方法上是直接用示例修改，可参考：<a href="https://link.jianshu.com/?t=https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">作业部落</a> 或者<br><a href="https://link.jianshu.com/?t=https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a> 的示例文稿。</p></blockquote><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><ul><li>Windows 上推荐：<br><a href="https://link.jianshu.com/?t=https://www.mindjet.com/" target="_blank" rel="noopener">Mindjet</a></li><li>Mac OS 上推荐：<br><a href="https://link.jianshu.com/?t=http://www.xmindchina.net/" target="_blank" rel="noopener">XMind</a></li><li>在线资源推荐：<br><a href="https://link.jianshu.com/?t=https://www.processon.com/" target="_blank" rel="noopener">ProcessOn</a><br><a href="https://link.jianshu.com/?t=http://naotu.baidu.com/" target="_blank" rel="noopener">百度脑图</a><br><a href="https://link.jianshu.com/?t=http://www.mindpin.com/" target="_blank" rel="noopener">MINDPIN</a></li></ul><h2 id="Hexo-相关资料"><a href="#Hexo-相关资料" class="headerlink" title="Hexo 相关资料"></a>Hexo 相关资料</h2><p><a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a><br><a href="https://link.jianshu.com/?t=https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">hexo常用命令笔记</a></p><h2 id="Next-相关资料"><a href="#Next-相关资料" class="headerlink" title="Next 相关资料"></a>Next 相关资料</h2><p><a href="https://link.jianshu.com/?t=https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a><br><a href="https://link.jianshu.com/?t=http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next 使用文档</a></p><h2 id="更多主题"><a href="#更多主题" class="headerlink" title="更多主题"></a>更多主题</h2><p><a href="https://link.jianshu.com/?t=https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themes</a><br><a href="https://link.jianshu.com/?t=https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的 Hexo 主题？</a></p><h2 id="绑定顶级域名"><a href="#绑定顶级域名" class="headerlink" title="绑定顶级域名"></a>绑定顶级域名</h2><p><a href="https://link.jianshu.com/?t=http://ipytlab.com/2016/01/23/GitHub-Pages绑定顶级域名/" target="_blank" rel="noopener">GitHub Pages绑定顶级域名的方法</a><br><a href="https://link.jianshu.com/?t=http://jingyan.baidu.com/article/3c343ff70fb6e60d3779632f.html" target="_blank" rel="noopener">怎样将域名绑定到github pages 博客上</a></p><h2 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h2><p><strong>站长工具</strong><br><a href="https://link.jianshu.com/?t=http://zhanzhang.baidu.com/" target="_blank" rel="noopener">百度站长工具</a><br><a href="https://link.jianshu.com/?t=http://tool.chinaz.com/" target="_blank" rel="noopener">站长之家工具</a><br><a href="https://link.jianshu.com/?t=http://jk.cloud.360.cn/" target="_blank" rel="noopener">360云监控</a></p><p><strong>数据统计</strong><br><a href="https://link.jianshu.com/?t=http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a><br><a href="https://link.jianshu.com/?t=http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>更多的配置可以去看看官方文档，我对<a href="https://link.jianshu.com/?t=http://diy-green.github.io" target="_blank" rel="noopener">我的博客</a>目前的效果已经比较满意。我觉得简洁就是美，我们应该专注内容。更多的设置以及喜欢折腾的朋友自己去百度、Google 吧！</p><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><p><a href="https://link.jianshu.com/?t=http://diy-green.github.io/" target="_blank" rel="noopener">DIY-green</a><br><a href="https://link.jianshu.com/?t=https://github.com/DIY-green" target="_blank" rel="noopener">我的GitHub</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://link.jianshu.com/?t=https://cn.wordpress.org/" target="_blank" rel="noopener">WordPress.org</a><br><a href="https://link.jianshu.com/?t=http://www.tuicool.com/articles/ruMVjyN" target="_blank" rel="noopener">每个人都应该有一个Jekyll博客</a><br><a href="https://link.jianshu.com/?t=https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themes</a><br><a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a><br><a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a><br><a href="https://www.jianshu.com/p/61987cec0fad#" target="_blank" rel="noopener">GitHub+Hexo+Next搭建免费独立个人博客</a><br><a href="https://link.jianshu.com/?t=https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a><br><a href="https://link.jianshu.com/?t=http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">Next主题官方文档</a><br><a href="https://link.jianshu.com/?t=http://zipperary.com/2013/05/28/hexo-guide-1/#more" target="_blank" rel="noopener">hexo系列教程：（一）hexo介绍</a><br><a href="https://link.jianshu.com/?t=http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="noopener">hexo系列教程：（二）搭建hexo博客</a><br><a href="https://link.jianshu.com/?t=http://www.zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="noopener">hexo系列教程：（三）hexo博客的配置、使用</a><br><a href="https://link.jianshu.com/?t=http://www.tuicool.com/articles/NneMnuF" target="_blank" rel="noopener">玩转hexo博客之next</a><br><a href="https://www.jianshu.com/p/f66103553c45" target="_blank" rel="noopener">使用Hexo + Next搭建静态博客</a><br><a href="https://link.jianshu.com/?t=https://github.com/hexojs/hexo" target="_blank" rel="noopener">hexo</a><br><a href="https://link.jianshu.com/?t=如何使用10个小时搭建出个人域名而又Geek的独立博客？" target="_blank" rel="noopener">如何使用10个小时搭建出个人域名而又Geek的独立博客？</a><br><a href="https://link.jianshu.com/?t=http://cyzus.github.io/2015/06/21/github-build-blog/" target="_blank" rel="noopener">傻瓜都可以利用github pages建博客</a><br><a href="https://www.jianshu.com/p/465830080ea9#" target="_blank" rel="noopener">HEXO+Github,搭建属于自己的博客</a><br><a href="https://link.jianshu.com/?t=http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="noopener">通过GitHub Pages建立个人站点（详细步骤）</a><br><a href="https://link.jianshu.com/?t=http://jingyan.baidu.com/article/0bc808fc9bbcf21bd585b97f.html" target="_blank" rel="noopener">免费顶级TK域名注册图文教程+DNS修改！</a><br><a href="https://link.jianshu.com/?t=http://www.chinaz.com/web/2015/0312/389381.shtml" target="_blank" rel="noopener">Freenom免费域名.TK、.CF、.ML、.GA注册及使用方法</a><br><a href="https://link.jianshu.com/?t=http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客</a><br><a href="https://www.jianshu.com/p/4eaddcbe4d12" target="_blank" rel="noopener">5分钟 搭建免费个人博客</a><br><a href="https://www.jianshu.com/p/a2023a601ceb" target="_blank" rel="noopener">hexo–搭建</a><br><a href="https://link.jianshu.com/?t=http://blog.csdn.net/poem_of_sunshine/article/details/29369785" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a><br><a href="https://link.jianshu.com/?t=http://lucifr.com/2013/06/02/hexo-on-cloud-with-dropbox-and-vps" target="_blank" rel="noopener">Hexo服务器端布署及Dropbox同步</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1233754-6f9a794ed9725f8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;免费个人博客搭建思维导图&lt;/p&gt;
&lt;h3 id=&quot;作者：李旺成&quot;&gt;&lt;a href=&quot;#作者：李旺成&quot; class=&quot;headerlink&quot; title=&quot;作者：李旺成&quot;&gt;&lt;/a&gt;作者：&lt;a href=&quot;https://link.jianshu.com/?t=https://github.com/DIY-green/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;李旺成&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;时间：2016年4月27日&quot;&gt;&lt;a href=&quot;#时间：2016年4月27日&quot; class=&quot;headerlink&quot; title=&quot;时间：2016年4月27日&quot;&gt;&lt;/a&gt;时间：2016年4月27日&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1233754-07f2a3d6f243ab36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/971/format/webp&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="个人博客" scheme="https://little-happypig.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="个人博客" scheme="https://little-happypig.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="搭建" scheme="https://little-happypig.github.io/tags/%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>思维导图测试</title>
    <link href="https://little-happypig.github.io/2020/04/24/2020-04-21-%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E6%B5%8B%E8%AF%95/"/>
    <id>https://little-happypig.github.io/2020/04/24/2020-04-21-%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E6%B5%8B%E8%AF%95/</id>
    <published>2020-04-24T00:02:00.000Z</published>
    <updated>2020-04-24T00:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思维导图测试"><a href="#思维导图测试" class="headerlink" title="思维导图测试"></a>思维导图测试</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;思维导图测试&quot;&gt;&lt;a href=&quot;#思维导图测试&quot; class=&quot;headerlink&quot; title=&quot;思维导图测试&quot;&gt;&lt;/a&gt;思维导图测试&lt;/h1&gt;
    
    </summary>
    
    
      <category term="思维导图" scheme="https://little-happypig.github.io/categories/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
    
      <category term="思维导图" scheme="https://little-happypig.github.io/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>二级建造师-建设工程施工管理笔记</title>
    <link href="https://little-happypig.github.io/2020/04/24/2020-04-24-%E4%BA%8C%E7%BA%A7%E5%BB%BA%E9%80%A0%E5%B8%88-%E5%BB%BA%E8%AE%BE%E5%B7%A5%E7%A8%8B%E6%96%BD%E5%B7%A5%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <id>https://little-happypig.github.io/2020/04/24/2020-04-24-%E4%BA%8C%E7%BA%A7%E5%BB%BA%E9%80%A0%E5%B8%88-%E5%BB%BA%E8%AE%BE%E5%B7%A5%E7%A8%8B%E6%96%BD%E5%B7%A5%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-24T00:02:00.000Z</published>
    <updated>2020-04-24T00:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="建设工程施工管理"><a href="#建设工程施工管理" class="headerlink" title="建设工程施工管理"></a>建设工程施工管理</h1><hr><h1 id="1-2Z101011"><a href="#1-2Z101011" class="headerlink" title="1. 2Z101011"></a>1. 2Z101011</h1><p>（1）建设工程管理的<strong>核心要素：费用、进度、质量</strong></p><p>（2）注意区分：<strong>费用</strong>对于各方追求的目标(不同的叫法)</p><p><strong>业主方：投资目标</strong>   </p><p><strong>施工方：成本目标</strong>。<u><strong>这个是贯彻正本教程始终的管理目标原则</strong></u></p><p>（3）<strong>业主方</strong>是建设工程项目生产过程的<strong>总集成者</strong>，是建设工程生产过程的<strong>总组织者</strong>，业主方的项目管理是<strong>管理的核心</strong></p><h2 id="业主方项目管理的目标和任务-其管理工作涉及实施阶段的全过程"><a href="#业主方项目管理的目标和任务-其管理工作涉及实施阶段的全过程" class="headerlink" title="业主方项目管理的目标和任务 其管理工作涉及实施阶段的全过程"></a>业主方项目管理的目标和任务 <u><strong><code>其管理工作涉及实施阶段的全过程</code></strong></u></h2><p>注意<strong>费用、进度、质量</strong>也是其管理的目标，<strong>三控</strong>（<code>安全、合同、信息</code>）<strong>三管</strong>（<code>投资、进度、质量</code>）<strong>一协调</strong>（<code>组织和协调</code>）</p><ul><li><p>项目的质量目标不仅涉及施工的质量，还包括设计质量、材料质量、设备质量和影响项目运行或运营的环境质量。</p></li><li><p>建设工程项目的<strong><u>全寿命周期</u></strong>包括：<code>决策阶段、实施阶段和使用阶段</code></p></li><li><p>业主方的项目管理工作涉及项目实施的全过程 </p></li><li><p>项目的实施阶段包括：<code>设计前的准备阶段、设计阶段、施工阶段、动用前准备阶段和保修期</code></p><img src="D:\SystemFiles\Documents\二级建造师\images\2z101000\建筑工程项目的决策阶段和实施阶段.png"  style="width:800px" style="height:200px"/> </li><li><p><code>安全管理是项目管理中最重要的任务</code></p></li></ul><h2 id="设计方项目管理的目标和任务-其管理工作涉及实施阶段的全过程"><a href="#设计方项目管理的目标和任务-其管理工作涉及实施阶段的全过程" class="headerlink" title="设计方项目管理的目标和任务( 其管理工作涉及实施阶段的全过程)"></a>设计方项目管理的目标和任务( <u><strong><code>其管理工作涉及实施阶段的全过程</code></strong></u>)</h2><ul><li><p>设计的<code>成本（区别于业主方的投资目标、都是资金，叫法不同而已）</code>目标、设计的<code>进度</code>目标和设计的<code>质量</code>目标</p></li><li><p>注意其<code>三管三控一协调</code>与<strong>业主方</strong>和后节的<strong>供货方</strong>、<strong>建设项目工程总承包方</strong>的项目管理目标任务的区别</p></li></ul><ul><li>设计方项目管理的任务包括:<br>(1)与设计工作有关的安全管理<br>(2)<code>设计成本控制和与设计工作有关的工程造价控制</code>  <code>注意这一项与业主方的区别</code><br>(3)设计进度控制<br>(4)设计质量控制<br>(5)设计合同管理<br>(6)设计信息管理<br>(7)与设计工作有关的组织和协调。</li></ul><h2 id="供货方项目管理的目标和任务-其管理工作涉及实施阶段的全过程"><a href="#供货方项目管理的目标和任务-其管理工作涉及实施阶段的全过程" class="headerlink" title="供货方项目管理的目标和任务( 其管理工作涉及实施阶段的全过程)"></a>供货方项目管理的目标和任务( <u><strong><code>其管理工作涉及实施阶段的全过程</code></strong></u>)</h2><ul><li>供货方项目管理的主要任务包括:<br>(1)供货的安全管理;<br>(2)供货方的<code>成本</code>控制;<br>(3)供货的进度控制;<br>(4)供货的质量控制;<br>(5)供货的合同管理;<br>(6)供货的信息管理;<br>(7)与供货有关的组织与协调。</li></ul><h2 id="建设项目工程总承包方项目管理的目标和任务-其管理工作涉及实施阶段的全过程"><a href="#建设项目工程总承包方项目管理的目标和任务-其管理工作涉及实施阶段的全过程" class="headerlink" title="建设项目工程总承包方项目管理的目标和任务( 其管理工作涉及实施阶段的全过程)"></a>建设项目工程总承包方项目管理的目标和任务( <u><strong><code>其管理工作涉及实施阶段的全过程</code></strong></u>)</h2><ul><li><p><strong><u>涉及项目实施阶段的全过程,即设计前的准备阶段、设计阶段、施工阶段、动用前准备阶段和保修期</u></strong></p></li><li><p>参考《建设项目工程总承包管理规范》GB/50358-2017的规定,建设项目工程总承包方的管理工作涉及：<br>(1)项目设计管理<br>(2)项目采购管理<br>(3)项目施工管理<br>(4)项目试运行管理和项目收尾等。</p></li><li><p>其中属于项目总承包方项目管理的任务包括：<br>(1)项目风险管理<br>(2)项目进度管理<br>(3)项目质量管理<br>(4)项目费用管理<br>(5)项目安全、职业健康与环境管理<br>(6)项目资源管理<br>(7)项目沟通与信息管理<br>(8)项目合同管理等。</p></li><li><p>注意区别：  <strong>施工总承包</strong> 涉及<code>施工</code>阶段</p></li></ul><p>​                                   <strong>工程总承包</strong>不但有<code>施工</code>还包含有<code>设计</code></p><hr><h1 id="2-2Z101011"><a href="#2-2Z101011" class="headerlink" title="2. 2Z101011"></a>2. 2Z101011</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;建设工程施工管理&quot;&gt;&lt;a href=&quot;#建设工程施工管理&quot; class=&quot;headerlink&quot; title=&quot;建设工程施工管理&quot;&gt;&lt;/a&gt;建设工程施工管理&lt;/h1&gt;&lt;hr&gt;
&lt;h1 id=&quot;1-2Z101011&quot;&gt;&lt;a href=&quot;#1-2Z101011&quot; class=&quot;headerlink&quot; title=&quot;1. 2Z101011&quot;&gt;&lt;/a&gt;1. 2Z101011&lt;/h1&gt;&lt;p&gt;（1）建设工程管理的&lt;strong&gt;核心要素：费用、进度、质量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（2）注意区分：&lt;strong&gt;费用&lt;/strong&gt;对于各方追求的目标(不同的叫法)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;业主方：投资目标&lt;/strong&gt;   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;施工方：成本目标&lt;/strong&gt;。&lt;u&gt;&lt;strong&gt;这个是贯彻正本教程始终的管理目标原则&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;（3）&lt;strong&gt;业主方&lt;/strong&gt;是建设工程项目生产过程的&lt;strong&gt;总集成者&lt;/strong&gt;，是建设工程生产过程的&lt;strong&gt;总组织者&lt;/strong&gt;，业主方的项目管理是&lt;strong&gt;管理的核心&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;业主方项目管理的目标和任务-其管理工作涉及实施阶段的全过程&quot;&gt;&lt;a href=&quot;#业主方项目管理的目标和任务-其管理工作涉及实施阶段的全过程&quot; class=&quot;headerlink&quot; title=&quot;业主方项目管理的目标和任务 其管理工作涉及实施阶段的全过程&quot;&gt;&lt;/a&gt;业主方项目管理的目标和任务 &lt;u&gt;&lt;strong&gt;&lt;code&gt;其管理工作涉及实施阶段的全过程&lt;/code&gt;&lt;/strong&gt;&lt;/u&gt;&lt;/h2&gt;&lt;p&gt;注意&lt;strong&gt;费用、进度、质量&lt;/strong&gt;也是其管理的目标，&lt;strong&gt;三控&lt;/strong&gt;（&lt;code&gt;安全、合同、信息&lt;/code&gt;）&lt;strong&gt;三管&lt;/strong&gt;（&lt;code&gt;投资、进度、质量&lt;/code&gt;）&lt;strong&gt;一协调&lt;/strong&gt;（&lt;code&gt;组织和协调&lt;/code&gt;）&lt;/p&gt;
    
    </summary>
    
    
      <category term="二级建造师" scheme="https://little-happypig.github.io/categories/%E4%BA%8C%E7%BA%A7%E5%BB%BA%E9%80%A0%E5%B8%88/"/>
    
    
      <category term="建设工程施工管理" scheme="https://little-happypig.github.io/tags/%E5%BB%BA%E8%AE%BE%E5%B7%A5%E7%A8%8B%E6%96%BD%E5%B7%A5%E7%AE%A1%E7%90%86/"/>
    
      <category term="二级建造师" scheme="https://little-happypig.github.io/tags/%E4%BA%8C%E7%BA%A7%E5%BB%BA%E9%80%A0%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>Jekyll中关于永久链接(Permalinks)的设置规则</title>
    <link href="https://little-happypig.github.io/2020/04/21/2020-04-21-Jekyll%E4%B8%AD%E5%85%B3%E4%BA%8E%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5(Permalinks)%E7%9A%84%E8%AE%BE%E7%BD%AE%E8%A7%84%E5%88%99/"/>
    <id>https://little-happypig.github.io/2020/04/21/2020-04-21-Jekyll%E4%B8%AD%E5%85%B3%E4%BA%8E%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5(Permalinks)%E7%9A%84%E8%AE%BE%E7%BD%AE%E8%A7%84%E5%88%99/</id>
    <published>2020-04-21T02:13:57.000Z</published>
    <updated>2020-04-21T02:13:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="永久链接-Permalinks"><a href="#永久链接-Permalinks" class="headerlink" title="永久链接(Permalinks)"></a>永久链接(Permalinks)</h1><p>Jekyll 支持以灵活的方式管理你网站的链接，你可以通过 <a href="http://jekyllcn.com/docs/configuration/" target="_blank" rel="noopener">Configuration</a> 或 <a href="http://jekyllcn.com/docs/frontmatter/" target="_blank" rel="noopener">YAML 头信息</a> 为每篇文章设置永久链接。你可以随心所欲地选择内建链接格式，或者自定义链接格式。</p><a id="more"></a><p>默认配置为 <code>date</code>。</p><p>永久链接的模板用以冒号为前缀的关键词标记动态内容，比如 <code>date</code> 代表 <code>/:categories/:year/:month/:day/:title.html</code>。</p><h2 id="模板变量"><a href="#模板变量" class="headerlink" title="模板变量"></a><a href="#模板变量">模板变量</a></h2><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td><code>year</code></td><td>文章文件名中的年份，格式如 <code>2013</code></td></tr><tr><td><code>month</code></td><td>文章文件名中的月份，格式如 <code>01</code></td></tr><tr><td><code>i_month</code></td><td>文章文件名中的月份，不包含首位的零，格式如 <code>1</code></td></tr><tr><td><code>day</code></td><td>文章文件名中的日期，格式如 <code>08</code></td></tr><tr><td><code>i_day</code></td><td>文章文件名中的日期，不包含首位的零，格式如 <code>8</code></td></tr><tr><td><code>short_year</code></td><td>文章文件名中的年份，后两位，格式如 <code>13</code></td></tr><tr><td><code>hour</code></td><td>时钟，24 小时制，日期以文章的头信息中的 <code>date</code> 为基准。（00..23）</td></tr><tr><td><code>minute</code></td><td>当前时钟内的分钟，日期以文章的头信息中的 <code>date</code> 为基准。（00..59）</td></tr><tr><td><code>second</code></td><td>当前分钟内的秒钟，日期以文章的头信息中的 <code>date</code> 为基准。（00..59）</td></tr><tr><td><code>title</code></td><td>由文件的文件名中确定的标题，可以被文件头信息中的 <code>slug</code> 覆盖。</td></tr><tr><td><code>slug</code></td><td>由文件的文件名中确定的　Slugified title（除数字和字母之外的字符们会被取代为连字符），可以被文件头信息中的 <code>slug</code> 覆盖。</td></tr><tr><td><code>categories</code></td><td>文章类型。如果一篇文章有多个类型，Jekyll 会创建一个目录（例如，<code>/category1/category2</code>）。Jekyll 也可以自动解析 URLs 中的双斜线 <code>//</code>，所以如果当前文章没有设定类型，则忽略该项。</td></tr></tbody></table><h2 id="内建永久链接类型"><a href="#内建永久链接类型" class="headerlink" title="内建永久链接类型"></a><a href="#内建永久链接类型">内建永久链接类型</a></h2><p>当你能够通过 <a href="http://jekyllcn.com/docs/permalinks/#template-variables" target="_blank" rel="noopener">template variables</a> 来指定一个自定义永久链接时，方便起见，Jekyll 还提供了下列的内建类型。</p><table><thead><tr><th>永久链接类型</th><th>URL 模板</th></tr></thead><tbody><tr><td><code>date</code></td><td><code>/:categories/:year/:month/:day/:title.html</code></td></tr><tr><td><code>pretty</code></td><td><code>/:categories/:year/:month/:day/:title/</code></td></tr><tr><td><code>ordinal</code></td><td><code>/:categories/:year/:y_day/:title.html</code></td></tr><tr><td><code>none</code></td><td><code>/:categories/:title.html</code></td></tr></tbody></table><h2 id="页面（Pages）和集合（collections）"><a href="#页面（Pages）和集合（collections）" class="headerlink" title="页面（Pages）和集合（collections）"></a><a href="#页面（Pages）和集合（collections">页面（Pages）和集合（collections）</a></h2><p><code>permalink</code> 配置用来指定博客的永久链接模板。页面和集合同样有它们自己的默认永久链接模板；页面的默认模板是 <code>/:path/:basename</code>，集合的默认模板是 /:collection/:path`。</p><p>这些样式被修改用来匹配在文章永久链接设置里的后缀式。例如，含有反斜杠 <code>/</code> 的永久链接模板 <code>pretty</code> 会更新页面的永久链接，使其同样包含一个反斜杠： <code>/:path/:basename/</code>。含有文件扩展名的永久链接模板 <code>date</code> 会更新页面的永久链接，使其同样包含文件扩展名： <code>/:path/:basename:output_ext</code>。这对任意自定义永久链接模板同样适用。</p><p>单独页面或集合文件的永久链接总能够在页面或者文件的<a href="http://jekyllcn.com/docs/frontmatter/" target="_blank" rel="noopener">头信息</a>里重写覆盖。另外，给定的集合的永久链接能在<a href="http://jekyllcn.com/docs/collections/" target="_blank" rel="noopener">集合配置</a>中自定义设置。</p><h2 id="永久链接模板举例"><a href="#永久链接模板举例" class="headerlink" title="永久链接模板举例"></a><a href="#永久链接模板举例">永久链接模板举例</a></h2><p>比如文件名： <code>/2009-04-29-slap-chop.textile</code></p><table><thead><tr><th>URL 模板</th><th>对应的永久链接 URL</th></tr></thead><tbody><tr><td>没有配置或 <code>permalink: date</code></td><td><code>/2009/04/29/slap-chop.html</code></td></tr><tr><td><code>pretty</code></td><td><code>/2009/04/29/slap-chop/</code></td></tr><tr><td><code>/:month-:day-:year/:title.html</code></td><td><code>/04-29-2009/slap-chop.html</code></td></tr><tr><td><code>/blog/:year/:month/:day/:title</code></td><td><code>/blog/2009/04/29/slap-chop/index.html</code></td></tr><tr><td><code>/:year/:month/:title</code>具体细节见于 <a href="#无扩展名永久链接">无扩展名链接（Extensionless permalinks）</a>。</td><td><code>/2009/04/slap-chop</code></td></tr></tbody></table><h2 id="无扩展名永久链接"><a href="#无扩展名永久链接" class="headerlink" title="无扩展名永久链接"></a><a href="#无扩展名永久链接">无扩展名永久链接</a></h2><p>Jekyll 支持即不包含反斜杠也不包含文件扩展名的永久链接，但这需要网络服务端的额外支持才能正常工作。当使用无扩展名永久链接时，写到硬盘上的输出文件依然会保留正确的文件扩展名（典型的比如，<code>.html</code>），所以网络服务端必须能够 map 那些没有文件扩展名的文件的请求。</p><p>无论 <a href="http://jekyllcn.com/docs/github-pages/" target="_blank" rel="noopener">GitHub Pages</a> 还是 Jekyll 内置的 WEBrick server 都能够正确处理这些请求，不需要任何额外工作。</p><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a><a href="#Apache">Apache</a></h3><p>Apache 网络服务端对内容协商（content negotiation）有着非常广泛的支持，而且能够通过在你的 <code>httpd.conf</code> 或者 <code>.htaccess</code> 文件中设置 <a href="https://httpd.apache.org/docs/current/content-negotiation.html#multiviews" target="_blank" rel="noopener">multiviews</a> 选项来处理无扩展名的 URLs：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Options +MultiViews</span><br></pre></td></tr></table></figure><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a><a href="#Nginx">Nginx</a></h3><p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files" target="_blank" rel="noopener">try_files</a> 指令允许你指定一个文件列表搜索，用来处理请求。如果请求的 URL 的精确匹配未找到的的话，下列配置会让 nginx 搜索含有 <code>.html</code> 扩展名的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try_files $uri $uri.html $uri&#x2F; &#x3D;404;</span><br></pre></td></tr></table></figure><p><a href="http://jekyllrb.com/docs/permalinks/" target="_blank" rel="noopener">原文链接</a></p><p>翻译贡献者</p><h1 id="英文原文"><a href="#英文原文" class="headerlink" title="英文原文"></a>英文原文</h1><h1 id="Permalinks"><a href="#Permalinks" class="headerlink" title="Permalinks"></a>Permalinks</h1><p>Permalinks are the output path for your pages, posts, or collections. They allow you to structure the directories of your source code different from the directories in your output.</p><h2 id="Front-Matter"><a href="#Front-Matter" class="headerlink" title="Front Matter"></a><a href="https://www.jekyll.com.cn/docs/permalinks/#front-matter" target="_blank" rel="noopener">Front Matter</a></h2><p>The simplest way to set a permalink is using front matter. You set the <code>permalink</code> variable in front matter to the output path you’d like.</p><p>For example, you might have a page on your site located at <code>/my_pages/about-me.html</code> and you want the output url to be <code>/about/</code>. In front matter of the page you would set:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">permalink: &#x2F;about&#x2F;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="Global"><a href="#Global" class="headerlink" title="Global"></a><a href="https://www.jekyll.com.cn/docs/permalinks/#global" target="_blank" rel="noopener">Global</a></h2><p>Setting a permalink in front matter for every page on your site is no fun. Luckily, Jekyll lets you set the permalink structure globally in your <code>_config.yml</code>.</p><p>To set a global permalink, you use the <code>permalink</code> variable in <code>_config.yml</code>. You can use placeholders to your desired output. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: &#x2F;:categories&#x2F;:year&#x2F;:month&#x2F;:day&#x2F;:title:output_ext</span><br></pre></td></tr></table></figure><p>Note that pages and collections (excluding <code>posts</code> and <code>drafts</code>) don’t have time and categories (for pages, the above <code>:title</code> is equivalent to <code>:basename</code>), these aspects of the permalink style are ignored for the output.</p><p>For example, a permalink style of <code>/:categories/:year/:month/:day/:title:output_ext</code> for the <code>posts</code> collection becomes <code>/:title.html</code> for pages and collections (excluding <code>posts</code> and <code>drafts</code>).</p><h3 id="Placeholders"><a href="#Placeholders" class="headerlink" title="Placeholders"></a><a href="https://www.jekyll.com.cn/docs/permalinks/#placeholders" target="_blank" rel="noopener">Placeholders</a></h3><p>Here’s the full list of placeholders available:</p><table><thead><tr><th>VARIABLE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>year</code></td><td>Year from the post’s filename with four digits. May be overridden via the document’s <code>date</code> front matter.</td></tr><tr><td><code>short_year</code></td><td>Year from the post’s filename without the century. (00..99) May be overridden via the document’s <code>date</code> front matter.</td></tr><tr><td><code>month</code></td><td>Month from the post’s filename. (01..12) May be overridden via the document’s <code>date</code> front matter.</td></tr><tr><td><code>i_month</code></td><td>Month without leading zeros from the post’s filename. May be overridden via the document’s <code>date</code> front matter.</td></tr><tr><td><code>short_month</code></td><td>Three-letter month abbreviation, e.g. “Jan”.</td></tr><tr><td><code>long_month</code>4.0</td><td>Full month name, e.g. “January”.</td></tr><tr><td><code>day</code></td><td>Day of the month from the post’s filename. (01..31) May be overridden via the document’s <code>date</code> front matter.</td></tr><tr><td><code>i_day</code></td><td>Day of the month without leading zeros from the post’s filename. May be overridden via the document’s <code>date</code> front matter.</td></tr><tr><td><code>y_day</code></td><td>Ordinal day of the year from the post’s filename, with leading zeros. (001..366)</td></tr><tr><td><code>w_year</code>4.0</td><td>Week year which may differ from the month year for up to three days at the start of January and end of December</td></tr><tr><td><code>week</code>4.0</td><td>Week number of the current year, starting with the first week having a majority of its days in January. (01..53)</td></tr><tr><td><code>w_day</code>4.0</td><td>Day of the week, starting with Monday. (1..7)</td></tr><tr><td><code>short_day</code>4.0</td><td>Three-letter weekday abbreviation, e.g. “Sun”.</td></tr><tr><td><code>long_day</code>4.0</td><td>Weekday name, e.g. “Sunday”.</td></tr><tr><td><code>hour</code></td><td>Hour of the day, 24-hour clock, zero-padded from the post’s <code>date</code> front matter. (00..23)</td></tr><tr><td><code>minute</code></td><td>Minute of the hour from the post’s <code>date</code> front matter. (00..59)</td></tr><tr><td><code>second</code></td><td>Second of the minute from the post’s <code>date</code> front matter. (00..59)</td></tr><tr><td><code>title</code></td><td>Title from the document’s filename. May be overridden via the document’s <code>slug</code> front matter.</td></tr><tr><td><code>slug</code></td><td>Slugified title from the document’s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document’s <code>slug</code> front matter.</td></tr><tr><td><code>categories</code></td><td>The specified categories for this post. If a post has multiple categories, Jekyll will create a hierarchy (e.g. <code>/category1/category2</code>). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</td></tr></tbody></table><h3 id="Built-in-formats"><a href="#Built-in-formats" class="headerlink" title="Built-in formats"></a><a href="https://www.jekyll.com.cn/docs/permalinks/#built-in-formats" target="_blank" rel="noopener">Built-in formats</a></h3><p>For posts, Jekyll also provides the following built-in styles for convenience:</p><table><thead><tr><th>PERMALINK STYLE</th><th>URL TEMPLATE</th></tr></thead><tbody><tr><td><code>date</code></td><td><code>/:categories/:year/:month/:day/:title:output_ext</code></td></tr><tr><td><code>pretty</code></td><td><code>/:categories/:year/:month/:day/:title/</code></td></tr><tr><td><code>ordinal</code></td><td><code>/:categories/:year/:y_day/:title:output_ext</code></td></tr><tr><td><code>weekdate</code>4.0</td><td><code>/:categories/:year/W:week/:short_day/:title:output_ext</code></td></tr><tr><td><code>none</code></td><td><code>/:categories/:title:output_ext</code></td></tr></tbody></table><p>Rather than typing <code>permalink: /:categories/:year/:month/:day/:title/</code>, you can just type <code>permalink: pretty</code>.</p><h4 id="Specifying-permalinks-through-the-front-matter"><a href="#Specifying-permalinks-through-the-front-matter" class="headerlink" title="Specifying permalinks through the front matter"></a>Specifying permalinks through the front matter</h4><p>Built-in permalink styles are not recognized in front matter. As a result, <code>permalink: pretty</code> will not work.</p><h3 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a><a href="https://www.jekyll.com.cn/docs/permalinks/#collections" target="_blank" rel="noopener">Collections</a></h3><p>For collections (including <code>posts</code> and <code>drafts</code>), you have the option to override the global permalink in the collection configuration in <code>_config.yml</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">collections:</span><br><span class="line">  my_collection:</span><br><span class="line">    output: true</span><br><span class="line">    permalink: &#x2F;:collection&#x2F;:name</span><br></pre></td></tr></table></figure><p>Collections have the following placeholders available:</p><table><thead><tr><th>VARIABLE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>:collection</code></td><td>Label of the containing collection.</td></tr><tr><td><code>:path</code></td><td>Path to the document relative to the collection’s directory, including base filename of the document.</td></tr><tr><td><code>:name</code></td><td>The document’s base filename, with every sequence of spaces and non-alphanumeric characters replaced by a hyphen.</td></tr><tr><td><code>:title</code></td><td>The <code>:title</code> template variable will take the <code>slug</code> <a href="https://www.jekyll.com.cn/docs/front-matter/" target="_blank" rel="noopener">front matter</a> variable value if any is present in the document; if none is defined then <code>:title</code> will be equivalent to <code>:name</code>, aka the slug generated from the filename.</td></tr><tr><td><code>:output_ext</code></td><td>Extension of the output file. (Included by default and usually unnecessary.)</td></tr></tbody></table><h3 id="Pages"><a href="#Pages" class="headerlink" title="Pages"></a><a href="https://www.jekyll.com.cn/docs/permalinks/#pages" target="_blank" rel="noopener">Pages</a></h3><p>For pages, you have to use front matter to override the global permalink, and if you set a permalink via front matter defaults in <code>_config.yml</code>, it will be ignored.</p><p>Pages have the following placeholders available:</p><table><thead><tr><th>VARIABLE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>:path</code></td><td>Path to the page relative to the site’s source directory, excluding base filename of the page.</td></tr><tr><td><code>:basename</code></td><td>The page’s base filename</td></tr><tr><td><code>:output_ext</code></td><td>Extension of the output file. (Included by default and usually unnecessary.)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;永久链接-Permalinks&quot;&gt;&lt;a href=&quot;#永久链接-Permalinks&quot; class=&quot;headerlink&quot; title=&quot;永久链接(Permalinks)&quot;&gt;&lt;/a&gt;永久链接(Permalinks)&lt;/h1&gt;&lt;p&gt;Jekyll 支持以灵活的方式管理你网站的链接，你可以通过 &lt;a href=&quot;http://jekyllcn.com/docs/configuration/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Configuration&lt;/a&gt; 或 &lt;a href=&quot;http://jekyllcn.com/docs/frontmatter/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;YAML 头信息&lt;/a&gt; 为每篇文章设置永久链接。你可以随心所欲地选择内建链接格式，或者自定义链接格式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Jekyll" scheme="https://little-happypig.github.io/categories/Jekyll/"/>
    
    
      <category term="Jekyll" scheme="https://little-happypig.github.io/tags/Jekyll/"/>
    
      <category term="Permalinks" scheme="https://little-happypig.github.io/tags/Permalinks/"/>
    
  </entry>
  
  <entry>
    <title>Markdownlint的设置知识</title>
    <link href="https://little-happypig.github.io/2020/04/21/2020-04-21-Markdownlint%E7%9A%84%E8%AE%BE%E7%BD%AE%E7%9F%A5%E8%AF%86/"/>
    <id>https://little-happypig.github.io/2020/04/21/2020-04-21-Markdownlint%E7%9A%84%E8%AE%BE%E7%BD%AE%E7%9F%A5%E8%AF%86/</id>
    <published>2020-04-21T02:06:57.000Z</published>
    <updated>2020-04-21T02:06:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdownlint的设置知识"><a href="#Markdownlint的设置知识" class="headerlink" title="Markdownlint的设置知识"></a>Markdownlint的设置知识</h1><p>VS Code的插件Markdownlint经常会提示一些你觉得不用修改的错误问题，比如每个文档不该有多个最高级标签（MD025）,这时候打开插件栏，右键点Markdownlint,选设置菜单，然后点击在Setting.json中编辑</p><ul><li>修改示例，例如你要关闭“MD025”和“MD040”提示，作如下修改：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;editor.suggestSelection&quot;: &quot;first&quot;,</span><br><span class="line">    &quot;vsintellicode.modify.editor.suggestSelection&quot;: &quot;automaticallyOverrodeDefaultValue&quot;,</span><br><span class="line">    &quot;git.autofetch&quot;: true,</span><br><span class="line">    &quot;markdownlint.config&quot;: &#123;</span><br><span class="line"></span><br><span class="line">            &quot;MD025&quot;: false,  </span><br><span class="line">            &quot;MD040&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;git.enableSmartCommit&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个项目用逗号分隔开。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdownlint的设置知识&quot;&gt;&lt;a href=&quot;#Markdownlint的设置知识&quot; class=&quot;headerlink&quot; title=&quot;Markdownlint的设置知识&quot;&gt;&lt;/a&gt;Markdownlint的设置知识&lt;/h1&gt;&lt;p&gt;VS Code的插件Markdownlint经常会提示一些你觉得不用修改的错误问题，比如每个文档不该有多个最高级标签（MD025）,这时候打开插件栏，右键点Markdownlint,选设置菜单，然后点击在Setting.json中编辑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改示例，例如你要关闭“MD025”和“MD040”提示，作如下修改：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;editor.suggestSelection&amp;quot;: &amp;quot;first&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;vsintellicode.modify.editor.suggestSelection&amp;quot;: &amp;quot;automaticallyOverrodeDefaultValue&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;git.autofetch&amp;quot;: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;markdownlint.config&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;MD025&amp;quot;: false,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;MD040&amp;quot;: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;git.enableSmartCommit&amp;quot;: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;多个项目用逗号分隔开。&lt;/p&gt;

    
    </summary>
    
    
      <category term="Markdown" scheme="https://little-happypig.github.io/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://little-happypig.github.io/tags/Markdown/"/>
    
      <category term="Markdownlint" scheme="https://little-happypig.github.io/tags/Markdownlint/"/>
    
  </entry>
  
  <entry>
    <title>解决使用VS Code上传Github每次都需要输入密码和用户名的问题</title>
    <link href="https://little-happypig.github.io/2020/04/21/2020-04-21-%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8Vs%20code%E4%B8%8A%E4%BC%A0github%E9%9C%80%E8%A6%81%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E5%92%8C%E7%94%A8%E6%88%B7%E5%90%8D%E8%A7%A3/"/>
    <id>https://little-happypig.github.io/2020/04/21/2020-04-21-%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8Vs%20code%E4%B8%8A%E4%BC%A0github%E9%9C%80%E8%A6%81%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E5%92%8C%E7%94%A8%E6%88%B7%E5%90%8D%E8%A7%A3/</id>
    <published>2020-04-21T01:56:00.000Z</published>
    <updated>2020-04-21T01:56:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决使用VS-Code上传Github每次都需要输入密码和用户名的问题"><a href="#解决使用VS-Code上传Github每次都需要输入密码和用户名的问题" class="headerlink" title="解决使用VS Code上传Github每次都需要输入密码和用户名的问题"></a>解决使用VS Code上传Github每次都需要输入密码和用户名的问题</h1><p>使用下面的命令可以解决</p><ul><li><p>git config –global credential.helper store</p><p>命令行随后会提示输入用户名和密码，输入密码是不会有任何显示状态变化，输完直接回车就好。</p></li></ul><p>再重启vscode，进行git操作，vscode就不再让我们输入用户名和密码啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;解决使用VS-Code上传Github每次都需要输入密码和用户名的问题&quot;&gt;&lt;a href=&quot;#解决使用VS-Code上传Github每次都需要输入密码和用户名的问题&quot; class=&quot;headerlink&quot; title=&quot;解决使用VS Code上传Github每次都需要输入密码和用户名的问题&quot;&gt;&lt;/a&gt;解决使用VS Code上传Github每次都需要输入密码和用户名的问题&lt;/h1&gt;&lt;p&gt;使用下面的命令可以解决&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;git config –global credential.helper store&lt;/p&gt;
&lt;p&gt;命令行随后会提示输入用户名和密码，输入密码是不会有任何显示状态变化，输完直接回车就好。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;再重启vscode，进行git操作，vscode就不再让我们输入用户名和密码啦！&lt;/p&gt;

    
    </summary>
    
    
      <category term="VS Code" scheme="https://little-happypig.github.io/categories/VS-Code/"/>
    
    
      <category term="VS Code" scheme="https://little-happypig.github.io/tags/VS-Code/"/>
    
      <category term="Github" scheme="https://little-happypig.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Markdownlint规则详细介绍及自定义参数设置</title>
    <link href="https://little-happypig.github.io/2020/04/21/2020-04-21-Markdownlint%E8%A7%84%E5%88%99%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE/"/>
    <id>https://little-happypig.github.io/2020/04/21/2020-04-21-Markdownlint%E8%A7%84%E5%88%99%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE/</id>
    <published>2020-04-21T01:46:00.000Z</published>
    <updated>2020-04-21T01:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdownlint规则详细介绍及自定义参数设置"><a href="#Markdownlint规则详细介绍及自定义参数设置" class="headerlink" title="Markdownlint规则详细介绍及自定义参数设置"></a>Markdownlint规则详细介绍及自定义参数设置</h1><p>markdownlint是vscode上一款非常好用的 Markdown 格式检查扩展工具，它规定了许多规则并实时对文档进行检查，防止一些语法错误，同时维持文档风格的统一，使用此工具有助于形成一个良好的写作习惯和规范。但因其规则较多，写文档时很容易就出错（或不符合规则），所以需要对工具的规则有一个详细的了解，另外，有时工作要求的文档风格与markdownlint工具规定的规则并不相同，比如标题、列表的创建格式，缩进的空格数等等，这时就需要对规则进行一定的设置。</p><p>本文主要参考markdownlint的rules文档，对每一个规则都进行了说明，指明了一些规则中可以设置的参数，便于用户设置相应的规则。</p><a id="more"></a><ul><li>MD001 - Heading levels should only increment by one level at a time<br>标题级数每次只能扩大1, 也就是不能隔级创建标题（从1级到6级的顺序）</li></ul><p>MD002 - First heading should be a top level heading<br>文档的第一个标题必须是最高级的标题（标题等级1级到6级逐渐降低）</p><p>参数：<br>“level”：指定最高级标题的级数，默认是1</p><ul><li>MD003 - Heading style<br>整篇文档要采用一致的标题格式</li></ul><p>参数：<br>“style”：字符串，指定文档标题的格式，有(“consistent”, “atx”, “atx_closed”, “setext”, “setext_with_atx”, “setext_with_atx_closed”)五种，默认是”consistent”，也就是整篇文档一致</p><p>标题格式必须统一，一般不能混用，但”setext_with_atx”, “setext_with_atx_closed”格式可以在”setext”格式二级标题后接着使用”atx”或”atx_closed”格式的标题</p><ul><li>MD004 - Unordered list style<br>整篇文档定义无序列表的格式要一致</li></ul><p>参数：<br>“style”：字符串，指定无序列表的定义格式，有(“consistent”, “asterisk”, “plus”, “dash”, “sublist”)五种，分别表示“定义时符号前后一致”，“用星号定义”，“用加号定义”，“用减号定义”，“定义多重列表时用不同的符号定义”，默认是”consistent”</p><ul><li><p>MD005 - Inconsistent indentation for list items at the same level<br>同一级的列表缩进必须一致<br>在有序列表中，前面的数字序号可以左对齐，也可以右对齐</p></li><li><p>MD006 - Consider starting bulleted lists at the beginning of the line<br>1级列表不能缩进</p></li><li><p>MD007 - Unordered list indentation<br>无序列表嵌套缩进时默认采用两个空格</p></li></ul><p>参数：<br>“ident”：指定无序列表嵌套时缩进的空格数，默认是2</p><ul><li>MD009 - Trailing spaces<br>行尾最多可以添加两个空格，超过会给出警告，两个空格正好可以用于换行</li></ul><p>参数：<br>“br_spaces”：指定在行尾可以添加的空格数目，空格数目建议大于等于2，如果小于2，会默认为0，也就是不允许任何行尾的空格<br>“list_item_empty_lines”：字符串，指定在列表中是否(true or false)用默认的空格数缩进空行，有的解释器会要求列表中的空行要缩进</p><ul><li>MD010 - Hard tabs<br>不能使用tab键缩进，要使用空格</li></ul><p>参数：<br>“code_blocks”：指定本条规则在代码块里是否(true or false)生效</p><ul><li><p>MD011 - Reversed link syntax<br>检查内联形式的链接的创建方式是否错误，中括号和圆括号是否用对</p></li><li><p>MD012 - Multiple consecutive blank lines<br>文档中不能有连续的空行，在代码块中此规则不会生效</p></li></ul><p>参数：<br>“maximum”：指定文档中可以连续的最多空行数，默认值是1</p><ul><li>MD013 - Line length<br>默认行的最大长度是80，此规则对代码块、表格、标题也生效</li></ul><p>参数：<br>“line_length”：指定行的最大长度，默认是80<br>“heading_line_length”：指定标题行的最大长度，默认是80<br>“code_blocks”：指定规则是否(true or false)对代码块生效，默认true<br>“tables”：指定规则是否(true or false)对表格生效，默认true<br>“hesdings”：指定规则是否(true or false)对标题生效，默认true</p><ul><li>MD014 - Dollar signs used before commands without showing output<br>在代码块中，终端命令前不需要有美元符号($)<br>如果代码块中既有终端命令，也有命令的输出，则终端命令前可以有美元符号($)，如：</li></ul><p>$ ls<br>foo bar<br>$ cat foo<br>hello world</p><ul><li><p>MD018 - No space after hash on atx style heading<br>在”atx”格式的标题中，#号和文字间需用一个空格隔开</p></li><li><p>MD019 - Multiple spaces after hash on atx style heading<br>在”atx”格式的标题中，#号和文字间只能用一个空格隔开，不能有多余的空格</p></li><li><p>MD020 - No space inside hashes on closed atx style heading<br>在”closed_atx”格式的标题中，文字和前后的#号之间需用一个空格隔开</p></li><li><p>MD021 - Multiple spaces inside hashes on closed atx style heading<br>在”closed_atx”格式的标题中，文字和前后的#号之间只能用一个空格隔开，不能有多余的空格</p></li><li><p>MD022 - Headings should be surrounded by blank lines<br>标题行的上下行必须都是空行</p></li></ul><p>参数：<br>“lines_above”：指定标题行上方的空行数，默认为1，可以设为更大或0<br>“lines_below”：指定标题行下方的空行数，默认为1，可以设为更大或0</p><p>注意当此处的空行设为比1大的数时，规则MD012的设置也要改</p><ul><li><p>MD023 - Headings must start at the beginning of the line<br>标题行不能缩进</p></li><li><p>MD024 - Multiple headings with the same content<br>文档不能有内容重复的标题</p></li></ul><p>参数：<br>“siblings_only”：默认为false，设为true时，不同标题下的子标题内容可以重复</p><ul><li>MD025 - Multiple top level headings in the same document<br>同一文档只能有一个最高级的标题，默认是只能有一个1级标题</li></ul><p>参数：<br>“level”：指定文档最高级的标题，默认是1<br>“front_matter_title”：字符串，指定在文档开头处的front matter中的标题，这个标题将作为整篇文档的最高级标题，如果文档中再次出现最高级标题，将会给出警告，另外，如果不想在front matter中指定标题，就把本参数的值设置为””</p><ul><li>MD026 - Trailing punctuation in heading<br>标题行末尾不能有以下标点符号：”.,;:!?”</li></ul><p>参数：<br>“punctuation”：字符串，指定标题行尾不能有的标点符号，默认是”.,;:!?”</p><p>此规则默认的是英文的标点符号，中文标点符号不在规则之内</p><ul><li><p>MD027 - Multiple spaces after blockquote symbol<br>创建引用区块时，右尖括号 ( &gt; ) 和文字之间有且只能有一个空格</p></li><li><p>MD028 - Blank line inside blockquote<br>两个引用区块间不能仅用一个空行隔开或者同一引用区块中不能有空行，如果一行中没有内容，则这一行要用&gt;开头</p></li><li><p>MD029 - Ordered list item prefix<br>有序列表的前缀序号格式必须只用1或者从1开始的加1递增数字(“one_or_ordered”)</p></li></ul><p>参数：<br>“style”：字符串，指定前缀序号的格式，(“one”,”ordered”,”one_or_ordered”,”zero”)，分别表示只用1做前缀，用从1开始的加1递增数字做前缀，只用1或者从1开始的加1递增数字做前缀，只用0做前缀，默认值是”one_or_ordered”</p><p>本条规则支持在前缀序号中补0，以实现对齐，如：</p><p>…<br>08.  one<br>09.  two<br>10.  three<br>…</p><ul><li>MD030 - Spaces after list markers<br>列表（有序、无序）的前缀符号和文字之间用1个空格隔开<br>在列表嵌套或者同一列表项中有多个段落时，无序列表缩进两个空格，有序列表缩进3个空格</li></ul><p>参数：<br>“ul_single”,”ol_single”,”ul_multi”,”ol_multi”：分别规定无序列表单个段落，有序列表单个段落，无序列表多个段落，有序列表多个段落的前缀符号和文字之间的空格数，默认是1</p><ul><li><p>MD031 - Fenced code blocks should be surrounded by blank lines<br>单独的代码块前后需要用空行隔开（除非是在文档开头或末尾），否则有些解释器不会解释为代码块</p></li><li><p>MD032 - Lists should be surrounded by blank lines<br>列表（有序、无序）前后需要用空行隔开，否则有些解释器不会解释为列表<br>列表的缩进必须一致，否则会警告</p></li><li><p>MD033 - Inline HTML<br>文档中不允许使用HTML语句</p></li></ul><p>参数：<br>“allowed_elements”：自定义允许的元素，是一个字符串数组，默认是空(empty)</p><ul><li><p>MD034 - Bare URL used<br>单纯的链接地址需要用尖括号 (&lt;&gt;) 包裹，否则有些解释器不会解释为链接</p></li><li><p>MD035 - Horizontal rule style<br>创建水平线时整篇文档要统一(consistent)，要和文档中第一次创建水平线使用的符号一致</p></li></ul><p>参数：<br>“style”：字符串，指定创建水平线的方式，值有：(“consistent”,”***”,”—“,”___”)，默认是”consistent”</p><ul><li>MD036 - Emphasis used instead of a heading<br>不能用强调代替标题</li></ul><p>参数：<br>“punctuation”：字符串，指定用于结尾的标点符号，以此符号结尾的强调不会被视为以强调代替标题，默认值是”.,;:!?”</p><p>此规则会检查只包含强调的单行段落，如果这种段落不是以指定的标点符号结尾，则会被视为以强调代替标题，会给出警告</p><ul><li><p>MD037 - Spaces inside emphasis markers<br>用于创建强调的符号和强调的的文字之间不能有空格</p></li><li><p>MD038 - Spaces inside code span elements<br>当用单反引号创建代码段的时候，单反引号和它们之间的代码不能有空格<br>如果要把单反引号嵌入到代码段的首尾，创建代码段的单反引号和嵌入的单反引号间要有一个空格隔开</p></li><li><p>MD039 - Spaces inside link text<br>链接名和包围它的中括号之间不能有空格，但链接名中间可以有空格，如：</p></li></ul><p><a href="http://www.baidu.com" target="_blank" rel="noopener" title="百 度">百 度</a></p><ul><li><p>MD040 - Fenced code blocks should have a language specified<br>单独的代码块（此处是指上下用三个反引号包围的代码块）应该指定代码块的编程语言，这一点有助于解释器对代码进行代码高亮</p></li><li><p>MD041 - First line in file should be a top level heading<br>文档的第一个非空行应该是文档最高级的标题，默认是1级标题</p></li></ul><p>参数：<br>“level”：指定文档最高级的标题，默认是1<br>“front_matter_title”：字符串，指定在文档开头处的front matter中的标题，这个标题将作为整篇文档的最高级标题，另外，如果不想在front matter中指定标题，就把本参数的值设置为””</p><ul><li><p>MD042 - No empty links<br>链接的地址不能为空</p></li><li><p>MD043 - Required heading structure<br>要求标题遵循一定的结构，默认是没有规定的结构(“null”)</p></li></ul><p>参数：<br>“headings”：字符串数组，指定标题需要遵循的结构，默认是”null”，可以自行指定结构，如；</p><p>[<br>    “# head”,<br>    “## item”,<br>    “### detail”,<br>    “*”<br>]<br>星号(*)表示对应的标题是可选的，没有强制要求，本条具体可以参照MD043</p><ul><li>MD044 - Proper names should have the correct capitalization<br>指定一些名称，会检查它是否有正确的大写</li></ul><p>参数：<br>“names”：字符串数组，指定要检查需要大写的名称，默认是空(“null”)<br>“code_blocks”：指定本规则是否(true or false)对代码块生效，默认是true<br>一些经常使用的名称可以使用本规则防止其拼写错误，比如JavaScript中字母J和S需要大写，就可以写到参数”names”中，防止写错</p><ul><li><p>MD045 - Images should have alternate text (alt text)<br>图片链接必须包含描述文本（alt text）</p></li><li><p>MD046 - Code block style<br>整篇文档采用一致的代码格式</p></li></ul><p>参数：<br>“style”: 字符串，指定代码块定义格式，有（”consistent”,”fenced”,”indented”）三种，分别代表：文档上下文一致，使用三个反引号隔开，使用缩进，默认是上下文一致</p><ul><li><p>MD047 - Files should end with a single newline character<br>文档需用一个空行结尾</p></li><li><p>MD048 - Code fence style<br>Tags: code</p></li></ul><p>Aliases: code-fence-style</p><p>Parameters: style (“consistent”, “tilde”, “backtick”; default “consistent”)</p><p>This rule is triggered when the symbols used in the document for fenced code blocks do not match the configured code fence style:</p><p>The configured list style can be a specific symbol to use (backtick, tilde), or can require that usage be consistent within the document.</p><p>Rationale: Consistent formatting makes it easier to understand a document.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdownlint规则详细介绍及自定义参数设置&quot;&gt;&lt;a href=&quot;#Markdownlint规则详细介绍及自定义参数设置&quot; class=&quot;headerlink&quot; title=&quot;Markdownlint规则详细介绍及自定义参数设置&quot;&gt;&lt;/a&gt;Markdownlint规则详细介绍及自定义参数设置&lt;/h1&gt;&lt;p&gt;markdownlint是vscode上一款非常好用的 Markdown 格式检查扩展工具，它规定了许多规则并实时对文档进行检查，防止一些语法错误，同时维持文档风格的统一，使用此工具有助于形成一个良好的写作习惯和规范。但因其规则较多，写文档时很容易就出错（或不符合规则），所以需要对工具的规则有一个详细的了解，另外，有时工作要求的文档风格与markdownlint工具规定的规则并不相同，比如标题、列表的创建格式，缩进的空格数等等，这时就需要对规则进行一定的设置。&lt;/p&gt;
&lt;p&gt;本文主要参考markdownlint的rules文档，对每一个规则都进行了说明，指明了一些规则中可以设置的参数，便于用户设置相应的规则。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="https://little-happypig.github.io/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://little-happypig.github.io/tags/Markdown/"/>
    
      <category term="Markdownlint" scheme="https://little-happypig.github.io/tags/Markdownlint/"/>
    
  </entry>
  
  <entry>
    <title>VS Code中配置Github</title>
    <link href="https://little-happypig.github.io/2020/04/21/2020-04-21-VS%20Code%E4%B8%AD%E9%85%8D%E7%BD%AEGitHub/"/>
    <id>https://little-happypig.github.io/2020/04/21/2020-04-21-VS%20Code%E4%B8%AD%E9%85%8D%E7%BD%AEGitHub/</id>
    <published>2020-04-21T00:26:00.000Z</published>
    <updated>2020-04-21T00:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>配置步骤：</p><h2 id="1-配置Git"><a href="#1-配置Git" class="headerlink" title="1. 配置Git"></a>1. 配置Git</h2><p>安装最新版git后，命令行输入</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name 你的用户名  </span><br><span class="line">* git config --global user.email 你的邮箱</span><br></pre></td></tr></table></figure><h2 id="2-Github设置"><a href="#2-Github设置" class="headerlink" title="2. Github设置"></a>2. Github设置</h2><p>在GitHub中新建一个空仓库（新项目）</p><p>确认后显示ssh地址  </p><p>首先在本地新建一个目录，这里git的操作要在这个新建的目录下操作（在这个文件夹中右键选择git Bash here），在Git Bash中依次运行下列代码</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> "# vscode-demo" &gt;&gt; README.<span class="built_in">md</span>  </span><br><span class="line">git init  </span><br><span class="line">git add README.<span class="built_in">md</span>  </span><br><span class="line">git commit -m "first commit"  </span><br><span class="line">git remote add origin git@github.com:plusczh/vscode-demo.git  </span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果在输出最后一行报错 fatal:Could not read from remote repository<br>则需要设置SSH key<br>右上角个人图标—Settings—左边栏SSH and GPG keys—New SSH key<br>title随便取，密码设置如下  </p><p>执行这个命令（在git bash中）</p><p>按下三次回车，看到泡泡一样的东西出现，说明安装成功<br>再键入cat ~/.ssh/id_rsa.pub，得到的一串字符输入到新建SSH时的密码栏<br>设置好SSH key，重新运行上面那段命令，刷新Github页面就能看到仓库名</p><h2 id="3-vscode设置"><a href="#3-vscode设置" class="headerlink" title="3. vscode设置"></a>3. vscode设置</h2><p>在vscode中打开那个在github中库托管的文件夹</p><p>步骤：</p><p>打开源代码管理栏<br>输入提交信息（注释）<br>提交<br>点开选择推送<br>当检测到有文件更改时更改栏才会有显示，才可以提交<br>push的过程是不用输入密码的，如果想有更好的git管理体验，可以在插件商店寻找相关插件。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;配置步骤：&lt;/p&gt;
&lt;h2 id=&quot;1-配置Git&quot;&gt;&lt;a href=&quot;#1-配置Git&quot; class=&quot;headerlink&quot; title=&quot;1. 配置Git&quot;&gt;&lt;/a&gt;1. 配置Git&lt;/h2&gt;&lt;p&gt;安装最新版git后，命令行输入&lt;/p&gt;
&lt;figure class=&quot;highlight dos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name 你的用户名  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* git config --global user.email 你的邮箱&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-Github设置&quot;&gt;&lt;a href=&quot;#2-Github设置&quot; class=&quot;headerlink&quot; title=&quot;2. Github设置&quot;&gt;&lt;/a&gt;2. Github设置&lt;/h2&gt;&lt;p&gt;在GitHub中新建一个空仓库（新项目）&lt;/p&gt;
&lt;p&gt;确认后显示ssh地址  &lt;/p&gt;
&lt;p&gt;首先在本地新建一个目录，这里git的操作要在这个新建的目录下操作（在这个文件夹中右键选择git Bash here），在Git Bash中依次运行下列代码&lt;/p&gt;
&lt;figure class=&quot;highlight dos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &quot;# vscode-demo&quot; &amp;gt;&amp;gt; README.&lt;span class=&quot;built_in&quot;&gt;md&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add README.&lt;span class=&quot;built_in&quot;&gt;md&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &quot;first commit&quot;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin git@github.com:plusczh/vscode-demo.git  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果在输出最后一行报错 fatal:Could not read from remote repository&lt;br&gt;则需要设置SSH key&lt;br&gt;右上角个人图标—Settings—左边栏SSH and GPG keys—New SSH key&lt;br&gt;title随便取，密码设置如下  &lt;/p&gt;
    
    </summary>
    
    
      <category term="VS Code" scheme="https://little-happypig.github.io/categories/VS-Code/"/>
    
    
      <category term="VS Code" scheme="https://little-happypig.github.io/tags/VS-Code/"/>
    
      <category term="Github" scheme="https://little-happypig.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>2020-04-20-我的博客开张了</title>
    <link href="https://little-happypig.github.io/2020/04/20/2020-04-20-%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%BC%A0%E4%BA%86/"/>
    <id>https://little-happypig.github.io/2020/04/20/2020-04-20-%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%BC%A0%E4%BA%86/</id>
    <published>2020-04-20T12:56:00.000Z</published>
    <updated>2020-04-20T12:56:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于使用opencore安装我的AMD黑果的笔记（一）"><a href="#关于使用opencore安装我的AMD黑果的笔记（一）" class="headerlink" title="关于使用opencore安装我的AMD黑果的笔记（一）"></a>关于使用opencore安装我的AMD黑果的笔记（一）</h1><ul><li>参考文章</li></ul><ol><li><a href="https://blog.xjn819.com/" target="_blank" rel="noopener">xjn’s 的博客</a></li><li><a href="https://blog.daliansky.net/" target="_blank" rel="noopener">黑果小兵的博客</a></li><li><a href="https://www.youtube.com/watch?v=QtvDRDqgolc&t=275s" target="_blank" rel="noopener">youtube的视频</a></li></ol><ul><li>相关下载文件</li></ul><ol><li><a href="https://mega.nz/#!8ox3SYAJ!RYPlgtSDiT6pBWlrLw6vCle_zh_9DAwIj9yrxKUWZGY" target="_blank" rel="noopener">安装工具链接</a></li><li><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">Python下载</a></li></ol><h2 id="待解决的问题"><a href="#待解决的问题" class="headerlink" title="待解决的问题"></a>待解决的问题</h2><ol><li>R9 290X显卡双屏的问题</li><li>启动图形化菜单</li><li>休眠</li><li>Indesign的启动问题</li></ol><h2 id="0-0-BIOS设置"><a href="#0-0-BIOS设置" class="headerlink" title="0.0 BIOS设置"></a>0.0 BIOS设置</h2><p>直接抄袭@黑果小兵了~嘻嘻嘻</p><p>禁用如下：</p><table><thead><tr><th align="left">英文</th><th align="left">中文</th></tr></thead><tbody><tr><td align="left">Fast Boot</td><td align="left">快速启动</td></tr><tr><td align="left">CFG Lock (MSR 0xE2 write protection)</td><td align="left">CFG 锁 (MSR 0xE2 写入保护)</td></tr><tr><td align="left">VT-d</td><td align="left"><a href="https://zhidao.baidu.com/question/495526512.html" target="_blank" rel="noopener">VT-d</a></td></tr><tr><td align="left">CSM</td><td align="left">兼容性支持模块</td></tr></tbody></table><p>启用如下：</p><table><thead><tr><th align="left">英文</th><th align="left">中文</th></tr></thead><tbody><tr><td align="left">VT-x</td><td align="left"><a href="https://zhidao.baidu.com/question/495526512.html" target="_blank" rel="noopener">VT-x</a></td></tr><tr><td align="left">Above 4G decoding</td><td align="left">大于 4G 地址空间解码</td></tr><tr><td align="left">Hyper Threading</td><td align="left">处理器超线程</td></tr><tr><td align="left">Execute Disable Bit</td><td align="left">执行禁止位</td></tr><tr><td align="left">EHCI/XHCI Hand-off</td><td align="left">接手 EHCI/XHCI 控制</td></tr><tr><td align="left">OS type: other types</td><td align="left">操作系统类型: 其他</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于使用opencore安装我的AMD黑果的笔记（一）&quot;&gt;&lt;a href=&quot;#关于使用opencore安装我的AMD黑果的笔记（一）&quot; class=&quot;headerlink&quot; title=&quot;关于使用opencore安装我的AMD黑果的笔记（一）&quot;&gt;&lt;/a&gt;关于使用opencore安装我的AMD黑果的笔记（一）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;参考文章&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.xjn819.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;xjn’s 的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.daliansky.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;黑果小兵的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QtvDRDqgolc&amp;t=275s&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;youtube的视频&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;相关下载文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://mega.nz/#!8ox3SYAJ!RYPlgtSDiT6pBWlrLw6vCle_zh_9DAwIj9yrxKUWZGY&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;安装工具链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python下载&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;待解决的问题&quot;&gt;&lt;a href=&quot;#待解决的问题&quot; class=&quot;headerlink&quot; title=&quot;待解决的问题&quot;&gt;&lt;/a&gt;待解决的问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;R9 290X显卡双屏的问题&lt;/li&gt;
&lt;li&gt;启动图形化菜单&lt;/li&gt;
&lt;li&gt;休眠&lt;/li&gt;
&lt;li&gt;Indesign的启动问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;0-0-BIOS设置&quot;&gt;&lt;a href=&quot;#0-0-BIOS设置&quot; class=&quot;headerlink&quot; title=&quot;0.0 BIOS设置&quot;&gt;&lt;/a&gt;0.0 BIOS设置&lt;/h2&gt;&lt;p&gt;直接抄袭@黑果小兵了~嘻嘻嘻&lt;/p&gt;
&lt;p&gt;禁用如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://little-happypig.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="VS Code" scheme="https://little-happypig.github.io/tags/VS-Code/"/>
    
      <category term="建设工程施工管理" scheme="https://little-happypig.github.io/tags/%E5%BB%BA%E8%AE%BE%E5%B7%A5%E7%A8%8B%E6%96%BD%E5%B7%A5%E7%AE%A1%E7%90%86/"/>
    
      <category term="笔记" scheme="https://little-happypig.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
